{"version":3,"sources":["play/world.ts"],"names":[],"mappings":"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","file":"world.7b6862a9.js","sourceRoot":"..\\src","sourcesContent":["import { Image } from \"./definitions/p5/index\";\r\n\r\n//import * as p5 from \"./definitions/p5/index\";\r\n\r\nclass World{\r\n    //Todos: Define interfaces for entites, terrain, etc\r\n    loaded: number;\r\n    loadCount: number;\r\n    TILE: { X: () => number; Y: () => number; };\r\n    entities: any[];\r\n    terrain: any[][];\r\n    tex: { [key: string]: Image };\r\n    json: Object;\r\n    sandbox: any; //Wut\r\n    actionBuffer: Object[];\r\n    failed: boolean;\r\n    markerID: number;\r\n    desc: string[];\r\n    inject: string;\r\n    snapTo: any;\r\n    constructor(worldID) {\r\n        this.loaded = 0;\r\n        this.loadCount = 1;\r\n        this.actionBuffer = [];\r\n        this.failed = false;\r\n\t\tthis.TILE = {\r\n\t\t\tX: ()=>width/10,\r\n\t\t\tY: ()=>height/10\r\n\t\t};\r\n\t\tloadJSON(\"/levels/\" + worldID + \"/data.json\", json => {this.json = json;this.loadLevel(json, 0)}, () => this.failed = true);\r\n\t\tloadStrings(\"/levels/\" + worldID + \"/t_index.txt\", index => {\r\n\t\t\tlet desc = [];\r\n\t\t\tindex.forEach(path => loadStrings(\"/levels/\" + worldID + \"/task/\" + path, md => {\r\n\t\t\t\tdesc.push(md.join(\"\\n\"));\r\n\t\t\t\tif(desc.length >= index.length){\r\n\t\t\t\t\tthis.desc = desc;\r\n\t\t\t\t}\r\n\t\t\t}, () => this.failed = true));\r\n\t\t}, () => this.failed = true);\r\n\t}\r\n\t\r\n\tready(){\r\n\t\treturn this.loaded == this.loadCount? \"ready\" : (this.failed ? \"failed\" : \"loading\");\r\n\t}\r\n\t\r\n\tloadLevel(json, index){\r\n\t\t//console.log(json);\r\n\t\tthis.loaded = 0;\r\n\t\tthis.loadCount = 1;\r\n\t\tthis.entities = json.tests[index].entities;\r\n\t\tthis.terrain = json.tests[index].terrain;\r\n\t\tif(!this.tex){\r\n\t\t\tthis.tex = {};\r\n\t\t\t//console.log(json.tex);\r\n\t\t\tObject.keys(json.tex).forEach(name =>{\r\n\t\t\t\tthis.loadCount++;\t\t\r\n\t\t\t\tloadImage(json.tex[name], img=>{this.tex[name] = img;this.loaded++});\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis.loaded++;\r\n\t}\r\n\t\r\n\tstep(editor){\r\n\t\tif(this.actionBuffer.length){\r\n\t\t\tthis.actionBuffer = this.actionBuffer.filter(x=>x[\"func\"](x[\"data\"]));\r\n\t\t} else if(this.sandbox){\r\n\t\t\tthis.sandbox.step();\r\n\t\t\tlet start = 0;\r\n\t\t\tlet end = 0;\r\n\t\t\tif (this.sandbox.stateStack.length) {\r\n\t\t\t\tif(this.markerID){\r\n\t\t\t\t\teditor.session.removeMarker(this.markerID);\r\n\t\t\t\t}\r\n\t\t\t\tlet node = this.sandbox.stateStack[this.sandbox.stateStack.length - 1].node;\r\n\t\t\t\tstart = node.start - this.inject.length;\r\n\t\t\t\tend = node.end - this.inject.length;\r\n\t\t\t}\r\n\t\t\tlet startLine = 0;\r\n\t\t\tlet endLine = 0;\r\n\t\t\tlet startChar = 0;\r\n\t\t\tlet endChar = 0;\r\n\t\t\tlet code = editor.getValue();\r\n\t\t\tfor(let i = 0;i <= end;i++){\r\n\t\t\t\tif(code[i] == \"\\n\"){\r\n\t\t\t\t\tendChar = 0;\r\n\t\t\t\t\tendLine++;\r\n\t\t\t\t\tif(i <= start){\r\n\t\t\t\t\t\tstartChar = 0;\r\n\t\t\t\t\t\tstartLine++;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tendChar++;\r\n\t\t\t\t\tif(i <= start){\r\n\t\t\t\t\t\tstartChar++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//console.log(startLine, endLine);\r\n\t\t\tthis.markerID = editor.session.addMarker(new ace.Range(startLine, startChar-1, endLine, endChar-1), \"myMarker\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tloadCode(code){\r\n\t\tlet _this = this;\r\n\t\tfunction initApi(interpreter, scope) {\r\n\t\t\t// Add native api functions\r\n\t\t\tlet apiFuncs = { //These functions are native\r\n\t\t\t\t_NATIVE_getBot: function(name){return _this.entities.filter(e=>e.controllable&&e.name==name)[0]},\r\n\t\t\t\tdone: function(){return false},\r\n\t\t\t\tlog: console.log\r\n\t\t\t};\r\n\t\t\tfor(let k in apiFuncs){\r\n\t\t\t\t//console.log(k, apiFuncs[k]);\r\n                interpreter.setProperty(scope, k, interpreter.createNativeFunction(apiFuncs[k]));\r\n            }\r\n            interpreter.setProperty(scope, \"_ALLBOTNAMES\", interpreter.nativeToPseudo(_this.entities.map(e=>e.name)));\r\n\t\t}\r\n\t\tthis.inject = [ //These functions are injected into the sandbox\r\n            \"function ControllableEntity(name){this.name=name}\",\r\n            \"function getBot(name){return new ControllableEntity(name)}\",\r\n            \"_ALLBOTNAMES = _ALLBOTNAMES.map(function(n){return new ControllableEntity(n)});\",\r\n            \"var Bots = {};\",\r\n            \"_ALLBOTNAMES.forEach(function(x){Bots[x.name]=x});\",\r\n            \"delete _ALLBOTNAMES;\"\r\n\t\t].join(\"\\n\");\r\n\t\t\r\n\t\tthis.sandbox = new Interpreter(this.inject + code, initApi);\r\n        //this.sandbox.appendCode(\");\r\n        //let allbots = this.sandbox.getValueFromScope('ControllableEntity');\r\n\r\n\t\tlet ControllableEntity = this.sandbox.getValueFromScope('ControllableEntity');\r\n\t\tlet ControllableEntityPrototype = this.sandbox.getProperty(ControllableEntity, 'prototype');\r\n\t\t\r\n\t\tfunction turnBase(entity, rot){\r\n\t\t\t_this.actionBuffer.push({\r\n\t\t\t\t\"func\" : function(data){\r\n\t\t\t\t\tentity.rot += rot/10;\r\n\t\t\t\t\tdata.n++;\r\n\t\t\t\t\tif(data.n >= 10){\r\n\t\t\t\t\t\tentity.rot = data.target;\r\n\t\t\t\t\t\tif(entity.rot < 0){\r\n\t\t\t\t\t\t\tentity.rot = 3;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(entity.rot > 3){\r\n\t\t\t\t\t\t\tentity.rot = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t},\r\n\t\t\t\t\"data\": {\"n\":0,\"target\":entity.rot+rot}\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tthis.sandbox.setValue([ControllableEntityPrototype, 'turnLeft'], this.sandbox.createNativeFunction(function(){\r\n\t\t\tlet name = this.properties.name;\r\n\t\t\tlet entity = _this.entities.filter(function(e){return e.controllable&&e.name==name})[0];\r\n\t\t\tturnBase(entity, -1);\r\n\t\t\t//entity.rot--;\r\n\t\t\t//if(entity.rot < 0){\r\n\t\t\t//\tentity.rot = 3;\r\n\t\t\t//}\r\n\t\t\t_this.snapTo = entity;\r\n\t\t}));\r\n\t\t\r\n\t\tthis.sandbox.setValue([ControllableEntityPrototype, 'turnRight'], this.sandbox.createNativeFunction(function(){\r\n\t\t\tlet name = this.properties.name;\r\n\t\t\tlet entity = _this.entities.filter(function(e){return e.controllable&&e.name==name})[0];\r\n\t\t\tturnBase(entity, 1);\r\n\t\t\t//entity.rot++;\r\n\t\t\t_this.snapTo = entity;\r\n\t\t}));\r\n\t\t\r\n\t\tthis.sandbox.setValue([ControllableEntityPrototype, 'move'], this.sandbox.createNativeFunction(function(){\r\n\t\t\tlet name = this.properties.name;\r\n\t\t\tlet entity = _this.entities.filter(function(e){return e.controllable&&e.name==name})[0];\r\n\t\t\t//console.log(\"bot moved\");\r\n\t\t\t_this.actionBuffer.push({\r\n\t\t\t\tfunc : function(data){\r\n\t\t\t\t\tswitch(entity.rot){\r\n\t\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\t\tentity.y += 0.1;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\tentity.x -= 0.1;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\tentity.y -= 0.1;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\tentity.x += 0.1;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdata.n++;\r\n\t\t\t\t\treturn data.n < 10;\r\n\t\t\t\t},\r\n\t\t\t\tdata: {n:0, target:0}\r\n\t\t\t});\r\n\t\t\t_this.snapTo = entity;\r\n\t\t}));\r\n\t\t\r\n\r\n\t\tthis.sandbox.setValue([ControllableEntityPrototype, 'getPos'], this.sandbox.createNativeFunction(function(){\r\n\t\t\tlet name = this.properties.name;\r\n\t\t\tlet entity = _this.entities.filter(function(e){return e.controllable&&e.name==name})[0];\r\n\t\t\treturn _this.sandbox.nativeToPseudo({x: entity.x, y: entity.y});\r\n\t\t}));\r\n\t\t\r\n\t\tthis.sandbox.setValue([ControllableEntityPrototype, 'getTile'], this.sandbox.createNativeFunction(function(){\r\n\t\t\tlet name = this.properties.name;\r\n\t\t\tlet entity = _this.entities.filter(function(e){return e.controllable&&e.name==name})[0];\r\n\t\t\treturn _this.sandbox.nativeToPseudo(_this.terrain[entity.x][entity.y].data);\r\n\t\t}));\r\n\t\t\r\n\t\tthis.sandbox.setValue([ControllableEntityPrototype, 'dieInVietnam'], this.sandbox.createNativeFunction(function(){\r\n\t\t\tdocument.body.innerHTML = \"\";\r\n\t\t\twindow.setInterval(function(){\r\n\t\t\t\tdocument.body.innerHTML += \" OOF\";\r\n\t\t\t});\r\n\t\t\twindow.setInterval(function(){\r\n\t\t\t\talert(document.body.innerHTML);\r\n\t\t\t}, 5000);\r\n\t\t}));\r\n\t}\r\n\t\r\n\tdraw(){\r\n\t\t//console.log(this.entities);\r\n\t\tpush();\r\n\t\t//noSmooth();\r\n\t\tif(this.snapTo){\r\n\t\t\ttranslate((width - this.TILE.X())/ 2, (height - this.TILE.Y()) / 2);\r\n\t\t\ttranslate(-1 * this.snapTo.x * this.TILE.X(), -1 * this.snapTo.y * this.TILE.Y());\r\n\t\t}\r\n\t\t//translate(this.TILE.X / 2, this.TILE.Y / 2);\r\n\t\tfor(let x = 0;x < this.terrain.length;x++){\r\n\t\t\tfor(let y = 0;y < this.terrain[x].length;y++){\r\n\t\t\t\timage(this.tex[this.terrain[x][y].tex], x * this.TILE.X(), y * this.TILE.Y(), this.TILE.X(), this.TILE.Y());\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.entities.forEach(e=>{\r\n\t\t\tpush();\r\n\t\t\timageMode(CENTER);\r\n\t\t\ttranslate(e.x * this.TILE.X(), e.y * this.TILE.Y());\r\n\t\t\ttranslate(0.5 * this.TILE.X(), 0.5 * this.TILE.Y());\r\n\t\t\tif(e.rot){\r\n\t\t\t\trotate(e.rot * 0.5 * PI);\r\n\t\t\t}\r\n\t\t\timage(this.tex[e.tex], 0, 0, this.TILE.X(), this.TILE.Y());\r\n\t\t\tpop();\r\n\t\t});\r\n\t\tpop();\r\n\t}\r\n}\r\nexport { World };"]}