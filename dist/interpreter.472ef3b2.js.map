{"version":3,"sources":["../../../../AppData/Roaming/npm/node_modules/parcel-bundler/node_modules/vm-browserify/index.js","lib/interpreter.js"],"names":["Interpreter","code","opt_initFunc","acorn","parse","PARSE_OPTIONS","ast","initFunc_","paused_","polyfills_","functionCounter_","stepFunctions_","Object","create","stepMatch","m","state","methodName","match","bind","global","createScope","join","undefined","stripLocations_","State","done","stateStack","run","value","length","nodeConstructor","node","constructor","ecmaVersion","READONLY_DESCRIPTOR","configurable","enumerable","writable","NONENUMERABLE_DESCRIPTOR","READONLY_NONENUMERABLE_DESCRIPTOR","VARIABLE_DESCRIPTOR","STEP_ERROR","SCOPE_REFERENCE","VALUE_IN_DESCRIPTOR","REGEXP_TIMEOUT","toStringCycles_","vm","WORKER_CODE","prototype","REGEXP_MODE","REGEXP_THREAD_TIMEOUT","appendCode","Error","populateScope_","scope","i","push","step","stack","type","nextState","e","initGlobalScope","setProperty","NaN","Infinity","OBJECT_PROTO","FUNCTION_PROTO","initFunction","initObject","proto","OBJECT","initArray","initString","initBoolean","initNumber","initDate","initRegExp","initError","initMath","initJSON","thisInterpreter","func","createNativeFunction","x","EvalError","eval","parseInt","parseFloat","isNaN","isFinite","strFunctions","escape","unescape","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","wrapper","nativeFunc","str","throwException","URI_ERROR","message","FUNCTION","ARRAY","ARRAY_PROTO","REGEXP","REGEXP_PROTO","DATE","DATE_PROTO","identifierRegexp","var_args","calledWithNew","newFunc","createObjectProto","arguments","String","argsStr","Array","slice","call","trim","args","split","name","test","SYNTAX_ERROR","parentScope","id","boxThis","isObject","getScope","strict","box","getPrototype","data","thisArg","func_","funcThis_","arguments_","arrayPseudoToNative","TYPE_ERROR","doneExec_","setNativeFunctionPrototype","valueOf","throwIfNullUndefined","obj","props","properties","arrayNativeToPseudo","getOwnPropertyNames","keys","prop","descriptor","preventExtensions","getOwnPropertyDescriptor","getter","setter","get","set","hasValue","pseudoDescriptor","nativeToPseudo","Boolean","toString","hasOwnProperty","propertyIsEnumerable","newArray","first","legalArrayLength","RANGE_ERROR","class","pop","apply","shift","unshift","reverse","index","howmany","list","splice","opt_begin","opt_end","opt_separator","iLength","getProperty","hasProperty","element","isa","jLength","j","searchElement","opt_fromIndex","indexOf","lastIndexOf","sort","STRING","fromCharCode","functions","compareString","locales","options","pseudoToNative","localeCompare","separator","limit","callback","string","Number","maybeThrowRegExp","sandbox","jsList","vmCall","splitWorker","createWorker","pid","regExpTimeout","onmessage","clearTimeout","postMessage","setAsyncFunctionPrototype","regexp","RegExp","matchWorker","search","n","searchWorker","substr","newSubstr","replaceWorker","replace","BOOLEAN","NUMBER","numConsts","fractionDigits","toExponential","ERROR","digits","toFixed","precision","toPrecision","radix","toLocaleString","Date","concat","from","Function","now","UTC","pattern","flags","rgx","populateRegExp","thisPseudoRegExp","lastIndex","exec","matchToPseudo","execWorker","result","input","opt_message","newError","createObject","createErrorSubclass","EVAL_ERROR","REFERENCE_ERROR","myMath","mathConsts","Math","numFunctions","myJSON","text","nativeObj","JSON","stringify","child","pseudoRegexp","nativeRegexp","source","ignoreCase","multiline","blob","blob_","Blob","Worker","URL","createObjectURL","nativeRegExp","ok","require","worker","setTimeout","terminate","legalArrayIndex","Value","cycles","strs","createFunction","opt_constructor","illegalConstructor","createAsyncFunction","asyncFunc","pseudoDate","interpreter","map","pseudoObj","isArray","key","opt_cycles","pseudo","native","val","nativeArray","pseudoArray","charCodeAt","isGetter","TypeError","opt_descriptor","max","defineProperty","ReferenceError","defObj","firstNode","expression","createSpecialScope","opt_scope","getValueFromScope","prevNode","setValueToScope","nodeClass","start","end","isConstructor","getValue","ref","setValue","Completion","NORMAL","BREAK","CONTINUE","RETURN","THROW","errorClass","error","unwind","label","cv","labels","isLoop","isSwitch","realError","errorTable","RangeError","SyntaxError","URIError","createGetter_","left","funcThis","doneCallee_","doneArgs_","createSetter_","elements","n_","array_","doneLeft_","components","doneRight_","leftReference_","doneGetter_","leftValue_","leftValue","doneSetter_","setterValue_","rightValue","directEval_","funcNode","paramName","paramValue","argsList","evalNode","argLength","argsWithCallback","done_","throwValue","mode","mode_","test_","doneInit_","doneObject_","variable_","object_","visited_","name_","gotPropName","props_","doneVariable_","propName","doneProperty_","property","properties_","kinds","switchValue_","defaultCase_","index_","switchCase","matched_","tested_","doneBlock_","doneHandler_","doneFinalizer_","leftSide_","changeValue","returnValue","declarations","declarationNode","init_","doneBody_"],"mappings":";AAAA,IAAA,QAAA,SAAA,EAAA,GACA,GAAA,EAAA,QAAA,OAAA,EAAA,QAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,GAAA,EAAA,KAAA,EAAA,OAAA,EAEA,OAAA,GAEA,YAAA,SAAA,GACA,GAAA,OAAA,KAAA,OAAA,OAAA,KAAA,GAEA,IAAA,EAAA,GACA,IAAA,IAAA,KAAA,EAAA,EAAA,KAAA,GACA,OAAA,GAIA,QAAA,SAAA,EAAA,GACA,GAAA,EAAA,QAAA,OAAA,EAAA,QAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,EAAA,EAAA,GAAA,EAAA,IAIA,WAAA,WACA,IAEA,OADA,OAAA,eAAA,GAAA,IAAA,IACA,SAAA,EAAA,EAAA,GACA,OAAA,eAAA,EAAA,EAAA,CACA,UAAA,EACA,YAAA,EACA,cAAA,EACA,MAAA,KAGA,MAAA,GACA,OAAA,SAAA,EAAA,EAAA,GACA,EAAA,GAAA,IAbA,GAkBA,QAAA,CAAA,QAAA,UAAA,OAAA,QAAA,YAAA,WACA,WAAA,OAAA,OAAA,MAAA,SAAA,SAAA,aACA,iBAAA,SAAA,SAAA,cAAA,YAAA,WACA,YAAA,qBAAA,YAAA,qBAAA,SACA,OAAA,WAAA,QAAA,aAAA,WAAA,YAAA,YAEA,SAAA,WACA,QAAA,UAAA,GAEA,IAAA,OAAA,QAAA,OAAA,SAAA,GACA,KAAA,gBAAA,QAAA,OAAA,IAAA,OAAA,GACA,KAAA,KAAA,GAGA,OAAA,UAAA,aAAA,SAAA,GACA,KAAA,aAAA,SACA,MAAA,IAAA,UAAA,+BAGA,IAAA,EAAA,SAAA,cAAA,UACA,EAAA,QAAA,EAAA,MAAA,IACA,EAAA,MAAA,QAAA,OAEA,SAAA,KAAA,YAAA,GAEA,IAAA,EAAA,EAAA,cACA,EAAA,EAAA,KAAA,EAAA,EAAA,YAEA,GAAA,IAEA,EAAA,KAAA,EAAA,QACA,EAAA,EAAA,MAGA,QAAA,YAAA,GAAA,SAAA,GACA,EAAA,GAAA,EAAA,KAEA,QAAA,QAAA,SAAA,GACA,EAAA,KACA,EAAA,GAAA,EAAA,MAIA,IAAA,EAAA,YAAA,GAEA,EAAA,EAAA,KAAA,EAAA,KAAA,MAmBA,OAjBA,QAAA,YAAA,GAAA,SAAA,IAIA,KAAA,IAAA,IAAA,QAAA,EAAA,MACA,EAAA,GAAA,EAAA,MAIA,QAAA,QAAA,SAAA,GACA,KAAA,GACA,WAAA,EAAA,EAAA,EAAA,MAIA,SAAA,KAAA,YAAA,GAEA,GAGA,OAAA,UAAA,iBAAA,WACA,OAAA,KAAA,KAAA,OAGA,OAAA,UAAA,gBAAA,SAAA,GACA,IAAA,EAAA,OAAA,cAAA,GACA,EAAA,KAAA,aAAA,GAQA,OANA,GACA,QAAA,YAAA,GAAA,SAAA,GACA,EAAA,GAAA,EAAA,KAIA,GAGA,QAAA,YAAA,OAAA,WAAA,SAAA,GACA,QAAA,GAAA,OAAA,GAAA,SAAA,GACA,IAAA,EAAA,OAAA,GACA,OAAA,EAAA,GAAA,MAAA,EAAA,GAAA,MAAA,KAAA,UAAA,OAIA,QAAA,UAAA,SAAA,GACA,OAAA,aAAA,SAGA,QAAA,aAAA,SAAA,GACA,OAAA,QAAA,OAAA,IAGA,QAAA,cAAA,OAAA,cAAA,SAAA,GACA,IAAA,EAAA,IAAA,QAMA,MALA,iBAAA,GACA,QAAA,YAAA,GAAA,SAAA,GACA,EAAA,GAAA,EAAA,KAGA;;AC5HA,aA40HA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAl0HA,IAAIA,EAAc,SAAdA,EAAuBC,EAAMC,GACX,iBAATD,IACTA,EAAOE,MAAMC,MAAMH,EAAMD,EAAYK,gBAElCC,KAAAA,IAAML,EACNM,KAAAA,UAAYL,EACZM,KAAAA,SAAU,EACVC,KAAAA,WAAa,GAEbC,KAAAA,iBAAmB,EAGnBC,KAAAA,eAAiBC,OAAOC,OAAO,MAChCC,IACAC,EAoBAC,EArBAF,EAAY,mBAEX,IAAA,IAAIG,KAAc,KACY,mBAArB,KAAKA,KACZF,EAAIE,EAAWC,MAAMJ,MACnBH,KAAAA,eAAeI,EAAE,IAAM,KAAKE,GAAYE,KAAK,OAIjDC,KAAAA,OAAS,KAAKC,YAAY,KAAKf,IAAK,MAEpCA,KAAAA,IAAMH,MAAMC,MAAM,KAAKK,WAAWa,KAAK,MAAOtB,EAAYK,eAC1DI,KAAAA,gBAAac,EACbC,KAAAA,gBAAgB,KAAKlB,SAAKiB,OAAWA,IACtCP,EAAQ,IAAIhB,EAAYyB,MAAM,KAAKnB,IAAK,KAAKc,SAC3CM,MAAO,EACRC,KAAAA,WAAa,CAACX,GACdY,KAAAA,MACAC,KAAAA,WAAQN,EAERjB,KAAAA,IAAML,GACPe,EAAQ,IAAIhB,EAAYyB,MAAM,KAAKnB,IAAK,KAAKc,SAC3CM,MAAO,EACRC,KAAAA,WAAWG,OAAS,EACpBH,KAAAA,WAAW,GAAKX,EAEhBe,KAAAA,gBAAkBf,EAAMgB,KAAKC,YAG7B,KAAL,WAAqB,KAAKN,YAM5B3B,EAAYK,cAAgB,CAC1B6B,YAAa,GAMflC,EAAYmC,oBAAsB,CAChCC,cAAc,EACdC,YAAY,EACZC,UAAU,GAMZtC,EAAYuC,yBAA2B,CACrCH,cAAc,EACdC,YAAY,EACZC,UAAU,GAMZtC,EAAYwC,kCAAoC,CAC9CJ,cAAc,EACdC,YAAY,EACZC,UAAU,GAMZtC,EAAYyC,oBAAsB,CAChCL,cAAc,EACdC,YAAY,EACZC,UAAU,GAQZtC,EAAY0C,WAAa,CAAe,YAAA,GAMxC1C,EAAY2C,gBAAkB,CAAoB,iBAAA,GAOlD3C,EAAY4C,oBAAsB,CAAwB,qBAAA,GAK1D5C,EAAY6C,eAAiB,CAAmB,gBAAA,GAOhD7C,EAAY8C,gBAAkB,GAM9B9C,EAAY+C,GAAK,KAKjB/C,EAAYgD,YAAc,CACxB,4BACE,cACA,qBACA,qBACE,gBAEE,4CACA,SACF,gBAEE,mCACA,SACF,iBAEE,oCACA,SACF,kBAEE,8CACA,SACF,eAEE,wBACA,8BACA,sDACA,SACF,WACE,gDACJ,IACA,uBACF,MASFhD,EAAYiD,UAAUC,YAAc,EAMpClD,EAAYiD,UAAUE,sBAAwB,IAM9CnD,EAAYiD,UAAUG,WAAa,SAASnD,GACtCe,IAAAA,EAAQ,KAAKW,WAAW,GACxB,IAACX,GAAgC,YAAvBA,EAAMgB,KAAN,KACNqB,MAAAA,MAAM,wDAKV,GAHgB,iBAATpD,IACTA,EAAOE,MAAMC,MAAMH,EAAMD,EAAYK,iBAElCJ,GAAyB,YAAjBA,EAAI,KACToD,MAAAA,MAAM,mDAETC,KAAAA,eAAerD,EAAMe,EAAMuC,OAE3B,IAAA,IAAWvB,EAAPwB,EAAI,EAAUxB,EAAO/B,EAAI,KAASuD,GAAKA,IAC9CxC,EAAMgB,KAAN,KAAmByB,KAAKzB,GAE1BhB,EAAMU,MAAO,GAOf1B,EAAYiD,UAAUS,KAAO,WACvBC,IAAAA,EAAQ,KAAKhC,WACbX,EAAQ2C,EAAMA,EAAM7B,OAAS,GAC7B,IAACd,EACI,OAAA,EAELgB,IAAAA,EAAOhB,EAAMgB,KAAM4B,EAAO5B,EAAI,KAC9B4B,GAAS,YAATA,GAAsB5C,EAAMU,KACvB,OAAA,EACF,GAAI,KAAKlB,QACP,OAAA,EAEL,IACEqD,IAAAA,EAAY,KAAKlD,eAAeiD,GAAMD,EAAO3C,EAAOgB,GACxD,MAAO8B,GAEHA,GAAAA,IAAM9D,EAAY0C,WAEdoB,MAAAA,EAMN,OAHAD,GACFF,EAAMF,KAAKI,KAER7B,EAAI,KAEA,KAAK0B,QAUhB1D,EAAYiD,UAAUrB,IAAM,WACnB,MAAC,KAAKpB,SAAW,KAAKkD,SACtB,OAAA,KAAKlD,SAOdR,EAAYiD,UAAUc,gBAAkB,SAASR,GAE1CS,KAAAA,YAAYT,EAAO,MAAOU,IACdjE,EAAYmC,qBACxB6B,KAAAA,YAAYT,EAAO,WAAYW,EAAAA,EACnBlE,EAAYmC,qBACxB6B,KAAAA,YAAYT,EAAO,iBAAahC,EACpBvB,EAAYmC,qBACxB6B,KAAAA,YAAYT,EAAO,SAAUA,EACjBvD,EAAYmC,qBACxB6B,KAAAA,YAAYT,EAAO,OAAQA,EACfvD,EAAYmC,qBACxB6B,KAAAA,YAAYT,EAAO,OAAQA,GAI3BY,KAAAA,aAAe,IAAInE,EAAYY,OAAO,MACtCwD,KAAAA,eAAiB,IAAIpE,EAAYY,OAAO,KAAKuD,cAE7CE,KAAAA,aAAad,GACbe,KAAAA,WAAWf,GAIhBA,EAAMgB,MAAQ,KAAKJ,aACdH,KAAAA,YAAYT,EAAO,cAAe,KAAKiB,OAC3BxE,EAAYuC,0BACxBkC,KAAAA,UAAUlB,GACVmB,KAAAA,WAAWnB,GACXoB,KAAAA,YAAYpB,GACZqB,KAAAA,WAAWrB,GACXsB,KAAAA,SAAStB,GACTuB,KAAAA,WAAWvB,GACXwB,KAAAA,UAAUxB,GACVyB,KAAAA,SAASzB,GACT0B,KAAAA,SAAS1B,GAGV2B,IAAAA,EAAkB,KAClBC,EAAO,KAAKC,qBACZ,SAASC,GAAUC,MAAAA,UAAU,kBAAmB,GACpDH,EAAKI,MAAO,EACPvB,KAAAA,YAAYT,EAAO,OAAQ4B,GAE3BnB,KAAAA,YAAYT,EAAO,WACpB,KAAK6B,qBAAqBI,UAAU,IACnCxB,KAAAA,YAAYT,EAAO,aACpB,KAAK6B,qBAAqBK,YAAY,IAErCzB,KAAAA,YAAYT,EAAO,QACpB,KAAK6B,qBAAqBM,OAAO,IAEhC1B,KAAAA,YAAYT,EAAO,WACpB,KAAK6B,qBAAqBO,UAAU,IAOnC,IALDC,IAAAA,EAAe,CACjB,CAACC,OAAQ,UAAW,CAACC,SAAU,YAC/B,CAACC,UAAW,aAAc,CAACC,mBAAoB,sBAC/C,CAACC,UAAW,aAAc,CAACC,mBAAoB,uBAExC1C,EAAI,EAAGA,EAAIoC,EAAa9D,OAAQ0B,IAAK,CACxC2C,IAAAA,EAAW,SAASC,GACf,OAAA,SAASC,GACV,IACKD,OAAAA,EAAWC,GAClB,MAAOvC,GAEPoB,EAAgBoB,eAAepB,EAAgBqB,UAAWzC,EAAE0C,WANnD,CASZZ,EAAapC,GAAG,IACdQ,KAAAA,YAAYT,EAAOqC,EAAapC,GAAG,GACpC,KAAK4B,qBAAqBe,GAAS,GACnCnG,EAAYuC,0BAIb,KAAL,OAAiB,KAAKiC,OAAa,KAAL,aAAuB,KAAKL,aACrD,KAAL,SAAmB,KAAKsC,SAAe,KAAL,eAAyB,KAAKrC,eAC3D,KAAL,MAAgB,KAAKsC,MAAY,KAAL,YAAsB,KAAKC,YAClD,KAAL,OAAiB,KAAKC,OAAa,KAAL,aAAuB,KAAKC,aACrD,KAAL,KAAe,KAAKC,KAAW,KAAL,WAAqB,KAAKC,WAE/C,KAAL,eAAoBxF,EAAgB,KAAL,KAAe,KAAW,KAAL,IAAc0C,IAC7D,KAAL,MAAe,EAAW,KAAL,OAAgB,EAAY,KAAL,aAAuB,GAC9D,KAAL,YAAsB,EAAQ,KAAL,WAAqB,EAG1C,KAAK1D,WACFA,KAAAA,UAAU,KAAMgD,IAQzBvD,EAAYiD,UAAUoB,aAAe,SAASd,GACxC2B,IACAiB,EADAjB,EAAkB,KAElB8B,EAAmB,sBAEvBb,EAAU,SAASc,GACb/B,GAAAA,EAAgBgC,gBAEdC,IAAAA,EAAU,UAGVA,EACAjC,EAAgBkC,kBAAkBlC,EAAgBd,gBAEpDiD,GAAAA,UAAUvF,OACR7B,IAAAA,EAAOqH,OAAOD,UAAUA,UAAUvF,OAAS,SAE3C7B,EAAO,GAETsH,IAAAA,EAAUC,MAAMvE,UAAUwE,MAAMC,KAAKL,UAAW,GAAI,GAAG/F,KAAK,KAAKqG,OACjEJ,GAAAA,EAAS,CAEN,IADDK,IAAAA,EAAOL,EAAQM,MAAM,WAChBrE,EAAI,EAAGA,EAAIoE,EAAK9F,OAAQ0B,IAAK,CAChCsE,IAAAA,EAAOF,EAAKpE,GACXwD,EAAiBe,KAAKD,IACzB5C,EAAgBoB,eAAepB,EAAgB8C,aAC3C,8BAAgCF,GAGxCP,EAAUK,EAAKtG,KAAK,MAItB6F,EAAQc,YAAc/C,EAAgB9D,OAGlC,IACEd,IAAAA,EAAMH,MAAMC,MAAM,aAAemH,EAAU,MAAQtH,EAAO,KAC1DD,EAAYK,eAChB,MAAOyD,GAEPoB,EAAgBoB,eAAepB,EAAgB8C,aAC3C,iBAAmBlE,EAAE0C,SAUpBW,OARoB,IAAvB7G,EAAG,KAASwB,QAEdoD,EAAgBoB,eAAepB,EAAgB8C,aAC3C,kCAENb,EAAQnF,KAAO1B,EAAG,KAAS,GAAZ,WACf4E,EAAgBlB,YAAYmD,EAAS,SAAUA,EAAQnF,KAAR,OAC3ChC,EAAYwC,mCACT2E,IAEDe,GAAK,KAAKxH,mBACb+F,KAAAA,SAAW,KAAKW,kBAAkB,KAAKhD,gBAEvCJ,KAAAA,YAAYT,EAAO,WAAY,KAAKkD,UAGpCzC,KAAAA,YAAY,KAAKyC,SAAU,YAAa,KAAKrC,eACjCpE,EAAYuC,0BACxBkE,KAAAA,SAASL,WAAaD,EAGtBnC,KAAAA,YAAY,KAAKI,eAAgB,cAAe,KAAKqC,SACzCzG,EAAYuC,0BACxB6B,KAAAA,eAAegC,WAAa,aAC5BhC,KAAAA,eAAegC,WAAW8B,GAAK,KAAKxH,mBACpCsD,KAAAA,YAAY,KAAKI,eAAgB,SAAU,EAC5CpE,EAAYwC,mCAEZ2F,IAAAA,EAAU,SAAStG,GAEjB,KAAEA,GAAUA,EAAMuG,UAAclD,EAAgBmD,WAAWC,QACzDzG,GAAAA,MAAAA,EAEFA,EAAQqD,EAAgB9D,WACnB,CAEDmH,IAAAA,EAAMrD,EAAgBkC,kBACtBlC,EAAgBsD,aAAa3G,IACjC0G,EAAIE,KAAO5G,EACXA,EAAQ0G,EAGL1G,OAAAA,GAGTsE,EAAU,SAASuC,EAASd,GACtB5G,IAAAA,EACAkE,EAAgBvD,WAAWuD,EAAgBvD,WAAWG,OAAS,GAEnEd,EAAM2H,MAAQ,KAEd3H,EAAM4H,UAAYT,EAAQO,GAE1B1H,EAAM6H,WAAa,GACfjB,MAAAA,IACEA,EAAKQ,SACPpH,EAAM6H,WAAa3D,EAAgB4D,oBAAoBlB,GAEvD1C,EAAgBoB,eAAepB,EAAgB6D,WAC3C,iDAGR/H,EAAMgI,WAAY,GAEfC,KAAAA,2BAA2B,KAAKxC,SAAU,QAASN,GAExDA,EAAU,SAASuC,GACb1H,IAAAA,EACAkE,EAAgBvD,WAAWuD,EAAgBvD,WAAWG,OAAS,GAEnEd,EAAM2H,MAAQ,KAEd3H,EAAM4H,UAAYT,EAAQO,GAE1B1H,EAAM6H,WAAa,GACd,IAAA,IAAIrF,EAAI,EAAGA,EAAI6D,UAAUvF,OAAQ0B,IACpCxC,EAAM6H,WAAWpF,KAAK4D,UAAU7D,IAElCxC,EAAMgI,WAAY,GAEfC,KAAAA,2BAA2B,KAAKxC,SAAU,OAAQN,GAElD1F,KAAAA,WAAWgD,KAAhB,oDAIE,8CACF,oBACE,oCACE,iEACF,IACA,0DACI,kBACA,2BACA,yBACE,4CACO,SACA,WACA,wDACT,KACJ,wBACE,mCACF,IACA,iCACA,iBACF,IACF,MACA,IAIE0C,EAAU,WACDmB,OAAAA,OAAO,OAEX2B,KAAAA,2BAA2B,KAAKxC,SAAU,WAAYN,GACtDnC,KAAAA,YAAY,KAAKyC,SAAU,WAC5B,KAAKrB,qBAAqBe,GAAS,GACnCnG,EAAYuC,0BAChB4D,EAAU,WACD,OAAA,KAAK+C,WAETD,KAAAA,2BAA2B,KAAKxC,SAAU,UAAWN,GACrDnC,KAAAA,YAAY,KAAKyC,SAAU,UAC5B,KAAKrB,qBAAqBe,GAAS,GACnCnG,EAAYuC,2BAOlBvC,EAAYiD,UAAUqB,WAAa,SAASf,GACtC2B,IACAiB,EADAjB,EAAkB,KAGtBiB,EAAU,SAAStE,GACbA,GAAAA,MAAAA,EAEEqD,OAAAA,EAAgBgC,gBAEX,KAGAhC,EAAgBkC,kBAAkBlC,EAAgBf,cAGzD,IAACtC,EAAMuG,SAAU,CAEfG,IAAAA,EAAMrD,EAAgBkC,kBACtBlC,EAAgBsD,aAAa3G,IAE1B0G,OADPA,EAAIE,KAAO5G,EACJ0G,EAGF1G,OAAAA,GAEJ2C,KAAAA,OAAS,KAAKY,qBAAqBe,GAAS,GAE5CnC,KAAAA,YAAY,KAAKQ,OAAQ,YAAa,KAAKL,aAC/BnE,EAAYuC,0BACxByB,KAAAA,YAAY,KAAKG,aAAc,cAAe,KAAKK,OACvCxE,EAAYuC,0BACxByB,KAAAA,YAAYT,EAAO,SAAU,KAAKiB,QAOnC2E,IAAAA,EAAuB,SAAStH,GAC9BA,MAAAA,GACFqD,EAAgBoB,eAAepB,EAAgB6D,WAC3C,mBAAqBlH,EAAQ,gBAKrCsE,EAAU,SAASiD,GACjBD,EAAqBC,GACjBC,IAAAA,EAAQD,EAAIhB,SAAWgB,EAAIE,WAAaF,EACrClE,OAAAA,EAAgBqE,oBACnB3I,OAAO4I,oBAAoBH,KAE5BrF,KAAAA,YAAY,KAAKQ,OAAQ,sBAC1B,KAAKY,qBAAqBe,GAAS,GACnCnG,EAAYuC,0BAEhB4D,EAAU,SAASiD,GAKVlE,OAJPiE,EAAqBC,GACjBA,EAAIhB,WACNgB,EAAMA,EAAIE,YAELpE,EAAgBqE,oBAAoB3I,OAAO6I,KAAKL,KAEpDpF,KAAAA,YAAY,KAAKQ,OAAQ,OAC1B,KAAKY,qBAAqBe,GAAS,GACnCnG,EAAYuC,0BAEhB4D,EAAU,SAAS5B,GAEbA,OAAU,OAAVA,EACKW,EAAgBkC,kBAAkB,YAE7B7F,IAAVgD,GAAwBA,EAAM6D,UAChClD,EAAgBoB,eAAepB,EAAgB6D,WAC3C,kDAEC7D,EAAgBkC,kBAAkB7C,KAEtCP,KAAAA,YAAY,KAAKQ,OAAQ,SAC1B,KAAKY,qBAAqBe,GAAS,GACnCnG,EAAYuC,0BAGX9B,KAAAA,WAAWgD,KAClB,gBACE,+BACA,2CACE,4BACA,gDACA,cACF,KACF,QACA,IAEE0C,EAAU,SAASiD,EAAKM,EAAMC,GAkBrBP,OAjBPM,EAAOpC,OAAOoC,GACTN,GAAQA,EAAIhB,UACflD,EAAgBoB,eAAepB,EAAgB6D,WAC3C,8CAEDY,GAAeA,EAAWvB,UAC7BlD,EAAgBoB,eAAepB,EAAgB6D,WAC3C,2CAEDK,EAAIE,WAAWI,IAASN,EAAIQ,mBAC/B1E,EAAgBoB,eAAepB,EAAgB6D,WAC3C,0BAA4BW,EAAO,+BAIzCxE,EAAgBlB,YAAYoF,EAAKM,EAAM1J,EAAY4C,oBACvB+G,EAAWL,YAChCF,GAEJpF,KAAAA,YAAY,KAAKQ,OAAQ,iBAC1B,KAAKY,qBAAqBe,GAAS,GACnCnG,EAAYuC,0BAEX9B,KAAAA,WAAWgD,KAAhB,gBAGA,+CACA,oDACE,eACA,+DACA,yDACA,mDACA,0CACA,oCACA,oCACA,yCACF,KACF,QAEA,oDACI,8CACF,yBACE,iCACA,0CACE,uDACF,IACA,cACF,IACF,MACA,IAEE0C,EAAU,SAASiD,EAAKM,GAMlB,GALCN,GAAQA,EAAIhB,UACflD,EAAgBoB,eAAepB,EAAgB6D,WAC3C,yDAENW,EAAOpC,OAAOoC,MACAN,EAAIE,WAAd,CAGAK,IAAAA,EAAa/I,OAAOiJ,yBAAyBT,EAAIE,WAAYI,GAC7DI,EAASV,EAAIU,OAAOJ,GACpBK,EAASX,EAAIW,OAAOL,IAEpBI,GAAUC,KACZJ,EAAWK,IAAMF,EACjBH,EAAWM,IAAMF,SACVJ,EAAW9H,aACX8H,EAAWrH,UAGhBT,IAAAA,EAAQ8H,EAAW9H,MACnBqI,EAAW,UAAWP,SACnBA,EAAW9H,MACdsI,IAAAA,EAAmBjF,EAAgBkF,eAAeT,GAI/CQ,OAHHD,GACFhF,EAAgBlB,YAAYmG,EAAkB,QAAStI,GAElDsI,IAEJnG,KAAAA,YAAY,KAAKQ,OAAQ,2BAC1B,KAAKY,qBAAqBe,GAAS,GACnCnG,EAAYuC,0BAEhB4D,EAAU,SAASiD,GAEVlE,OADPiE,EAAqBC,GACdlE,EAAgBsD,aAAaY,IAEjCpF,KAAAA,YAAY,KAAKQ,OAAQ,iBAC1B,KAAKY,qBAAqBe,GAAS,GACnCnG,EAAYuC,0BAEhB4D,EAAU,SAASiD,GACViB,OAAAA,QAAQjB,KAASA,EAAIQ,mBAEzB5F,KAAAA,YAAY,KAAKQ,OAAQ,eAC1B,KAAKY,qBAAqBe,GAAS,GACnCnG,EAAYuC,0BAEhB4D,EAAU,SAASiD,GAIVA,OAHHA,GAAOA,EAAIhB,WACbgB,EAAIQ,mBAAoB,GAEnBR,GAEJpF,KAAAA,YAAY,KAAKQ,OAAQ,oBAC1B,KAAKY,qBAAqBe,GAAS,GACnCnG,EAAYuC,0BAGX0G,KAAAA,2BAA2B,KAAKzE,OAAQ,WACzCxE,EAAYY,OAAOqC,UAAUqH,UAC5BrB,KAAAA,2BAA2B,KAAKzE,OAAQ,iBACzCxE,EAAYY,OAAOqC,UAAUqH,UAC5BrB,KAAAA,2BAA2B,KAAKzE,OAAQ,UACzCxE,EAAYY,OAAOqC,UAAUiG,SAEjC/C,EAAU,SAASuD,GAEb,OADJP,EAAqB,MAChB,KAAKf,SAGHd,OAAOoC,KAAS,KAAKJ,WAFnB,KAAKiB,eAAeb,IAI1BT,KAAAA,2BAA2B,KAAKzE,OAAQ,iBAAkB2B,GAE/DA,EAAU,SAASuD,GAEb,OADJP,EAAqB,MAChB,KAAKf,SAGHxH,OAAOqC,UAAUuH,qBAAqB9C,KAAK,KAAK4B,WAAYI,GAF1D,KAAKc,qBAAqBd,IAIhCT,KAAAA,2BAA2B,KAAKzE,OAAQ,uBAAwB2B,GAErEA,EAAU,SAASiD,GACV,OAAM,CAGP,KADJA,EAAMlE,EAAgBsD,aAAaY,IAG1B,OAAA,EAELA,GAAAA,IAAQ,KACH,OAAA,IAIRH,KAAAA,2BAA2B,KAAKzE,OAAQ,gBAAkB2B,IAOjEnG,EAAYiD,UAAUwB,UAAY,SAASlB,GACrC2B,IACAiB,EADAjB,EAAkB,KAGtBiB,EAAU,SAASc,GACb/B,GAAAA,EAAgBgC,gBAEduD,IAAAA,EAAW,UAGXA,EACAvF,EAAgBkC,kBAAkBlC,EAAgByB,aAEpD+D,IAAAA,EAAQrD,UAAU,GAClBA,GAAqB,IAArBA,UAAUvF,QAAiC,iBAAV4I,EAC/BhF,MAAM1F,EAAY2K,iBAAiBD,KACrCxF,EAAgBoB,eAAepB,EAAgB0F,YAChB,wBAEjCH,EAASnB,WAAWxH,OAAS4I,MACxB,CACA,IAAA,IAAIlH,EAAI,EAAGA,EAAI6D,UAAUvF,OAAQ0B,IACpCiH,EAASnB,WAAW9F,GAAK6D,UAAU7D,GAErCiH,EAASnB,WAAWxH,OAAS0B,EAExBiH,OAAAA,GAEJ/D,KAAAA,MAAQ,KAAKtB,qBAAqBe,GAAS,GAC3CQ,KAAAA,YAAc,KAAKD,MAAM4C,WAAX,UACdtF,KAAAA,YAAYT,EAAO,QAAS,KAAKmD,OAGtCP,EAAU,SAASiD,GACVA,OAAAA,GAAqB,UAAdA,EAAIyB,OAEf7G,KAAAA,YAAY,KAAK0C,MAAO,UACZ,KAAKtB,qBAAqBe,GAAS,GACnCnG,EAAYuC,0BAG7B4D,EAAU,WACDqB,OAAAA,MAAMvE,UAAU6H,IAAIpD,KAAK,KAAK4B,aAElCL,KAAAA,2BAA2B,KAAKvC,MAAO,MAAOP,GAEnDA,EAAU,SAASc,GACVO,OAAAA,MAAMvE,UAAUQ,KAAKsH,MAAM,KAAKzB,WAAYjC,YAEhD4B,KAAAA,2BAA2B,KAAKvC,MAAO,OAAQP,GAEpDA,EAAU,WACDqB,OAAAA,MAAMvE,UAAU+H,MAAMtD,KAAK,KAAK4B,aAEpCL,KAAAA,2BAA2B,KAAKvC,MAAO,QAASP,GAErDA,EAAU,SAASc,GACVO,OAAAA,MAAMvE,UAAUgI,QAAQF,MAAM,KAAKzB,WAAYjC,YAEnD4B,KAAAA,2BAA2B,KAAKvC,MAAO,UAAWP,GAEvDA,EAAU,WAED,OADPqB,MAAMvE,UAAUiI,QAAQxD,KAAK,KAAK4B,YAC3B,MAEJL,KAAAA,2BAA2B,KAAKvC,MAAO,UAAWP,GAEvDA,EAAU,SAASgF,EAAOC,GACpBC,IAAAA,EAAO7D,MAAMvE,UAAUqI,OAAOP,MAAM,KAAKzB,WAAYjC,WAClDnC,OAAAA,EAAgBqE,oBAAoB8B,IAExCpC,KAAAA,2BAA2B,KAAKvC,MAAO,SAAUP,GAEtDA,EAAU,SAASoF,EAAWC,GACxBH,IAAAA,EAAO7D,MAAMvE,UAAUwE,MAAMC,KAAK,KAAK4B,WAAYiC,EAAWC,GAC3DtG,OAAAA,EAAgBqE,oBAAoB8B,IAExCpC,KAAAA,2BAA2B,KAAKvC,MAAO,QAASP,GAErDA,EAAU,SAASsF,GACVjE,OAAAA,MAAMvE,UAAU3B,KAAKoG,KAAK,KAAK4B,WAAYmC,IAE/CxC,KAAAA,2BAA2B,KAAKvC,MAAO,OAAQP,GAEpDA,EAAU,SAASc,GAKZ,IAJDoE,IAAAA,EAAO,GACPvJ,EAAS,EAET4J,EAAUxG,EAAgByG,YAAY,KAAM,UACvCnI,EAAI,EAAGA,EAAIkI,EAASlI,IAAK,CAC5B0B,GAAAA,EAAgB0G,YAAY,KAAMpI,GAAI,CACpCqI,IAAAA,EAAU3G,EAAgByG,YAAY,KAAMnI,GAChD6H,EAAKvJ,GAAU+J,EAEjB/J,IAGG,IAAI0B,EAAI,EAAGA,EAAI6D,UAAUvF,OAAQ0B,IAAK,CACrC3B,IAAAA,EAAQwF,UAAU7D,GAClB0B,GAAAA,EAAgB4G,IAAIjK,EAAOqD,EAAgBwB,OAExC,IADDqF,IAAAA,EAAU7G,EAAgByG,YAAY9J,EAAO,UACxCmK,EAAI,EAAGA,EAAID,EAASC,IACvB9G,EAAgB0G,YAAY/J,EAAOmK,KACrCX,EAAKvJ,GAAUoD,EAAgByG,YAAY9J,EAAOmK,IAEpDlK,SAGFuJ,EAAKvJ,GAAUD,EAGZqD,OAAAA,EAAgBqE,oBAAoB8B,IAExCpC,KAAAA,2BAA2B,KAAKvC,MAAO,SAAUP,GAEtDA,EAAU,SAAS8F,EAAeC,GACzB1E,OAAAA,MAAMvE,UAAUkJ,QAAQpB,MAAM,KAAKzB,WAAYjC,YAEnD4B,KAAAA,2BAA2B,KAAKvC,MAAO,UAAWP,GAEvDA,EAAU,SAAS8F,EAAeC,GACzB1E,OAAAA,MAAMvE,UAAUmJ,YAAYrB,MAAM,KAAKzB,WAAYjC,YAEvD4B,KAAAA,2BAA2B,KAAKvC,MAAO,cAAeP,GAE3DA,EAAU,WAED,OADPqB,MAAMvE,UAAUoJ,KAAK3E,KAAK,KAAK4B,YACxB,MAEJL,KAAAA,2BAA2B,KAAKvC,MAAO,OAAQP,GAE/C1F,KAAAA,WAAWgD,KAAhB,kDAIE,8CACF,kCACE,oEACA,YACA,wBACA,4BACA,yCACA,SACA,oBACE,+DACA,OACF,IACA,eACF,IACF,MAlBE,mDAuBE,8CACF,+BACE,wFACA,wBACA,4BACA,gBACA,+DACA,kCACE,gBACE,kBACA,mDACF,IACF,IACA,cACF,IACF,MAtCE,oDA2CE,8CACF,gCACE,kEACA,YACA,wBACA,4BACA,yCACA,SACA,oBACE,4CACA,OACF,IACF,IACF,MAxDE,gDA6DE,8CACF,gCACE,8DACA,eACA,wBACA,4BACA,yCACA,sBACA,SACA,oBACE,mDACA,OACF,IACA,YACF,IACF,MA5EE,mDAiFE,8CACF,0CACE,kEACA,4DACA,gCACE,wBACF,WACE,oCACA,kBACE,kEACF,IACA,kBACF,IACA,yBACE,mDACF,IACA,gBACF,IACF,MAnGE,wDAwGE,8CACF,0CACE,yGACA,kEACA,+BACE,wBACF,WACE,mCACA,eACE,kEACF,IACA,kBACF,IACA,wBACE,mDACF,IACA,gBACF,IACF,MA1HE,iDA+HE,8CACF,+BACE,6DACA,wBACA,4BACA,+DACA,kCACE,iDACE,eACF,IACF,IACA,gBACF,IACF,MAGA,gBACE,oCACA,8CAjJA,wCAoJI,2BACF,IArJF,0CAwJI,mBACA,kDACE,4CACE,sBACA,yBACA,sBACA,aACF,IACF,IACA,uBACF,IACA,eACF,KACF,QAEA,2DACI,8CACF,eACE,gBACA,0CACE,wFACF,IACA,wBACF,IACF,MACA,KAOAzD,EAAYiD,UAAUyB,WAAa,SAASnB,GACtC2B,IACAiB,EADAjB,EAAkB,KAGtBiB,EAAU,SAAStE,GAEbqD,OADJrD,EAAQyF,OAAOzF,GACXqD,EAAgBgC,iBAEbuB,KAAAA,KAAO5G,EACL,MAGAA,GAGNyK,KAAAA,OAAS,KAAKlH,qBAAqBe,GAAS,GAC5CnC,KAAAA,YAAYT,EAAO,SAAU,KAAK+I,QAGlCtI,KAAAA,YAAY,KAAKsI,OAAQ,eAC1B,K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","file":"interpreter.472ef3b2.js","sourceRoot":"..\\src","sourcesContent":["var indexOf = function (xs, item) {\n    if (xs.indexOf) return xs.indexOf(item);\n    else for (var i = 0; i < xs.length; i++) {\n        if (xs[i] === item) return i;\n    }\n    return -1;\n};\nvar Object_keys = function (obj) {\n    if (Object.keys) return Object.keys(obj)\n    else {\n        var res = [];\n        for (var key in obj) res.push(key)\n        return res;\n    }\n};\n\nvar forEach = function (xs, fn) {\n    if (xs.forEach) return xs.forEach(fn)\n    else for (var i = 0; i < xs.length; i++) {\n        fn(xs[i], i, xs);\n    }\n};\n\nvar defineProp = (function() {\n    try {\n        Object.defineProperty({}, '_', {});\n        return function(obj, name, value) {\n            Object.defineProperty(obj, name, {\n                writable: true,\n                enumerable: false,\n                configurable: true,\n                value: value\n            })\n        };\n    } catch(e) {\n        return function(obj, name, value) {\n            obj[name] = value;\n        };\n    }\n}());\n\nvar globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',\n'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',\n'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',\n'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',\n'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];\n\nfunction Context() {}\nContext.prototype = {};\n\nvar Script = exports.Script = function NodeScript (code) {\n    if (!(this instanceof Script)) return new Script(code);\n    this.code = code;\n};\n\nScript.prototype.runInContext = function (context) {\n    if (!(context instanceof Context)) {\n        throw new TypeError(\"needs a 'context' argument.\");\n    }\n    \n    var iframe = document.createElement('iframe');\n    if (!iframe.style) iframe.style = {};\n    iframe.style.display = 'none';\n    \n    document.body.appendChild(iframe);\n    \n    var win = iframe.contentWindow;\n    var wEval = win.eval, wExecScript = win.execScript;\n\n    if (!wEval && wExecScript) {\n        // win.eval() magically appears when this is called in IE:\n        wExecScript.call(win, 'null');\n        wEval = win.eval;\n    }\n    \n    forEach(Object_keys(context), function (key) {\n        win[key] = context[key];\n    });\n    forEach(globals, function (key) {\n        if (context[key]) {\n            win[key] = context[key];\n        }\n    });\n    \n    var winKeys = Object_keys(win);\n\n    var res = wEval.call(win, this.code);\n    \n    forEach(Object_keys(win), function (key) {\n        // Avoid copying circular objects like `top` and `window` by only\n        // updating existing context properties or new properties in the `win`\n        // that was only introduced after the eval.\n        if (key in context || indexOf(winKeys, key) === -1) {\n            context[key] = win[key];\n        }\n    });\n\n    forEach(globals, function (key) {\n        if (!(key in context)) {\n            defineProp(context, key, win[key]);\n        }\n    });\n    \n    document.body.removeChild(iframe);\n    \n    return res;\n};\n\nScript.prototype.runInThisContext = function () {\n    return eval(this.code); // maybe...\n};\n\nScript.prototype.runInNewContext = function (context) {\n    var ctx = Script.createContext(context);\n    var res = this.runInContext(ctx);\n\n    if (context) {\n        forEach(Object_keys(ctx), function (key) {\n            context[key] = ctx[key];\n        });\n    }\n\n    return res;\n};\n\nforEach(Object_keys(Script.prototype), function (name) {\n    exports[name] = Script[name] = function (code) {\n        var s = Script(code);\n        return s[name].apply(s, [].slice.call(arguments, 1));\n    };\n});\n\nexports.isContext = function (context) {\n    return context instanceof Context;\n};\n\nexports.createScript = function (code) {\n    return exports.Script(code);\n};\n\nexports.createContext = Script.createContext = function (context) {\n    var copy = new Context();\n    if(typeof context === 'object') {\n        forEach(Object_keys(context), function (key) {\n            copy[key] = context[key];\n        });\n    }\n    return copy;\n};\n","/**\n * @license\n * JavaScript Interpreter\n *\n * Copyright 2013 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Interpreting JavaScript in JavaScript.\n * @author fraser@google.com (Neil Fraser)\n */\n'use strict';\n\n/**\n * Create a new interpreter.\n * @param {string|!Object} code Raw JavaScript text or AST.\n * @param {Function=} opt_initFunc Optional initialization function.  Used to\n *     define APIs.  When called it is passed the interpreter object and the\n *     global scope object.\n * @constructor\n */\nvar Interpreter = function(code, opt_initFunc) {\n  if (typeof code === 'string') {\n    code = acorn.parse(code, Interpreter.PARSE_OPTIONS);\n  }\n  this.ast = code;\n  this.initFunc_ = opt_initFunc;\n  this.paused_ = false;\n  this.polyfills_ = [];\n  // Unique identifier for native functions.  Used in serialization.\n  this.functionCounter_ = 0;\n  // Map node types to our step function names; a property lookup is faster\n  // than string concatenation with \"step\" prefix.\n  this.stepFunctions_ = Object.create(null);\n  var stepMatch = /^step([A-Z]\\w*)$/;\n  var m;\n  for (var methodName in this) {\n    if ((typeof this[methodName] === 'function') &&\n        (m = methodName.match(stepMatch))) {\n      this.stepFunctions_[m[1]] = this[methodName].bind(this);\n    }\n  }\n  // Create and initialize the global scope.\n  this.global = this.createScope(this.ast, null);\n  // Run the polyfills.\n  this.ast = acorn.parse(this.polyfills_.join('\\n'), Interpreter.PARSE_OPTIONS);\n  this.polyfills_ = undefined;  // Allow polyfill strings to garbage collect.\n  this.stripLocations_(this.ast, undefined, undefined);\n  var state = new Interpreter.State(this.ast, this.global);\n  state.done = false;\n  this.stateStack = [state];\n  this.run();\n  this.value = undefined;\n  // Point at the main program.\n  this.ast = code;\n  var state = new Interpreter.State(this.ast, this.global);\n  state.done = false;\n  this.stateStack.length = 0;\n  this.stateStack[0] = state;\n  // Get a handle on Acorn's node_t object.  It's tricky to access.\n  this.nodeConstructor = state.node.constructor;\n  // Preserve publicly properties from being pruned/renamed by JS compilers.\n  // Add others as needed.\n  this['stateStack'] = this.stateStack;\n};\n\n/**\n * @const {!Object} Configuration used for all Acorn parsing.\n */\nInterpreter.PARSE_OPTIONS = {\n  ecmaVersion: 5\n};\n\n/**\n * Property descriptor of readonly properties.\n */\nInterpreter.READONLY_DESCRIPTOR = {\n  configurable: true,\n  enumerable: true,\n  writable: false\n};\n\n/**\n * Property descriptor of non-enumerable properties.\n */\nInterpreter.NONENUMERABLE_DESCRIPTOR = {\n  configurable: true,\n  enumerable: false,\n  writable: true\n};\n\n/**\n * Property descriptor of readonly, non-enumerable properties.\n */\nInterpreter.READONLY_NONENUMERABLE_DESCRIPTOR = {\n  configurable: true,\n  enumerable: false,\n  writable: false\n};\n\n/**\n * Property descriptor of variables.\n */\nInterpreter.VARIABLE_DESCRIPTOR = {\n  configurable: false,\n  enumerable: true,\n  writable: true\n};\n\n/**\n * Unique symbol for indicating that a step has encountered an error, has\n * added it to the stack, and will be thrown within the user's program.\n * When STEP_ERROR is thrown in the JS-Interpreter, the error can be ignored.\n */\nInterpreter.STEP_ERROR = {'STEP_ERROR': true};\n\n/**\n * Unique symbol for indicating that a reference is a variable on the scope,\n * not an object property.\n */\nInterpreter.SCOPE_REFERENCE = {'SCOPE_REFERENCE': true};\n\n/**\n * Unique symbol for indicating, when used as the value of the value\n * parameter in calls to setProperty and friends, that the value\n * should be taken from the property descriptor instead.\n */\nInterpreter.VALUE_IN_DESCRIPTOR = {'VALUE_IN_DESCRIPTOR': true};\n\n/**\n * Unique symbol for indicating that a RegExp timeout has occurred in a VM.\n */\nInterpreter.REGEXP_TIMEOUT = {'REGEXP_TIMEOUT': true};\n\n/**\n * For cycle detection in array to string and error conversion;\n * see spec bug github.com/tc39/ecma262/issues/289\n * Since this is for atomic actions only, it can be a class property.\n */\nInterpreter.toStringCycles_ = [];\n\n/**\n * Node's vm module, if loaded and required.\n * @type {Object}\n */\nInterpreter.vm = null;\n\n/**\n * Code for executing regular expressions in a thread.\n */\nInterpreter.WORKER_CODE = [\n  \"onmessage = function(e) {\",\n    \"var result;\",\n    \"var data = e.data;\",\n    \"switch (data[0]) {\",\n      \"case 'split':\",\n        // ['split', string, separator, limit]\n        \"result = data[1].split(data[2], data[3]);\",\n        \"break;\",\n      \"case 'match':\",\n        // ['match', string, regexp]\n        \"result = data[1].match(data[2]);\",\n        \"break;\",\n      \"case 'search':\",\n        // ['search', string, regexp]\n        \"result = data[1].search(data[2]);\",\n        \"break;\",\n      \"case 'replace':\",\n        // ['replace', string, regexp, newSubstr]\n        \"result = data[1].replace(data[2], data[3]);\",\n        \"break;\",\n      \"case 'exec':\",\n        // ['exec', regexp, lastIndex, string]\n        \"var regexp = data[1];\",\n        \"regexp.lastIndex = data[2];\",\n        \"result = [regexp.exec(data[3]), data[1].lastIndex];\",\n        \"break;\",\n      \"default:\",\n        \"throw 'Unknown RegExp operation: ' + data[0];\",\n    \"}\",\n    \"postMessage(result);\",\n  \"};\"];\n\n/**\n * Some pathological regular expressions can take geometric time.\n * Regular expressions are handled in one of three ways:\n * 0 - throw as invalid.\n * 1 - execute natively (risk of unresponsive program).\n * 2 - execute in separate thread (not supported by IE 9).\n */\nInterpreter.prototype.REGEXP_MODE = 2;\n\n/**\n * If REGEXP_MODE = 2, the length of time (in ms) to allow a RegExp\n * thread to execute before terminating it.\n */\nInterpreter.prototype.REGEXP_THREAD_TIMEOUT = 1000;\n\n/**\n * Add more code to the interpreter.\n * @param {string|!Object} code Raw JavaScript text or AST.\n */\nInterpreter.prototype.appendCode = function(code) {\n  var state = this.stateStack[0];\n  if (!state || state.node['type'] !== 'Program') {\n    throw Error('Expecting original AST to start with a Program node.');\n  }\n  if (typeof code === 'string') {\n    code = acorn.parse(code, Interpreter.PARSE_OPTIONS);\n  }\n  if (!code || code['type'] !== 'Program') {\n    throw Error('Expecting new AST to start with a Program node.');\n  }\n  this.populateScope_(code, state.scope);\n  // Append the new program to the old one.\n  for (var i = 0, node; (node = code['body'][i]); i++) {\n    state.node['body'].push(node);\n  }\n  state.done = false;\n};\n\n/**\n * Execute one step of the interpreter.\n * @return {boolean} True if a step was executed, false if no more instructions.\n */\nInterpreter.prototype.step = function() {\n  var stack = this.stateStack;\n  var state = stack[stack.length - 1];\n  if (!state) {\n    return false;\n  }\n  var node = state.node, type = node['type'];\n  if (type === 'Program' && state.done) {\n    return false;\n  } else if (this.paused_) {\n    return true;\n  }\n  try {\n    var nextState = this.stepFunctions_[type](stack, state, node);\n  } catch (e) {\n    // Eat any step errors.  They have been thrown on the stack.\n    if (e !== Interpreter.STEP_ERROR) {\n      // Uh oh.  This is a real error in the JS-Interpreter.  Rethrow.\n      throw e;\n    }\n  }\n  if (nextState) {\n    stack.push(nextState);\n  }\n  if (!node['end']) {\n    // This is polyfill code.  Keep executing until we arrive at user code.\n    return this.step();\n  }\n  return true;\n};\n\n/**\n * Execute the interpreter to program completion.  Vulnerable to infinite loops.\n * @return {boolean} True if a execution is asynchronously blocked,\n *     false if no more instructions.\n */\nInterpreter.prototype.run = function() {\n  while (!this.paused_ && this.step()) {}\n  return this.paused_;\n};\n\n/**\n * Initialize the global scope with buitin properties and functions.\n * @param {!Interpreter.Object} scope Global scope.\n */\nInterpreter.prototype.initGlobalScope = function(scope) {\n  // Initialize uneditable global properties.\n  this.setProperty(scope, 'NaN', NaN,\n                   Interpreter.READONLY_DESCRIPTOR);\n  this.setProperty(scope, 'Infinity', Infinity,\n                   Interpreter.READONLY_DESCRIPTOR);\n  this.setProperty(scope, 'undefined', undefined,\n                   Interpreter.READONLY_DESCRIPTOR);\n  this.setProperty(scope, 'window', scope,\n                   Interpreter.READONLY_DESCRIPTOR);\n  this.setProperty(scope, 'this', scope,\n                   Interpreter.READONLY_DESCRIPTOR);\n  this.setProperty(scope, 'self', scope); // Editable.\n\n  // Create the objects which will become Object.prototype and\n  // Function.prototype, which are needed to bootstrap everything else.\n  this.OBJECT_PROTO = new Interpreter.Object(null);\n  this.FUNCTION_PROTO = new Interpreter.Object(this.OBJECT_PROTO);\n  // Initialize global objects.\n  this.initFunction(scope);\n  this.initObject(scope);\n  // Unable to set scope's parent prior (OBJECT did not exist).\n  // Note that in a browser this would be 'Window', whereas in Node.js it would\n  // be 'Object'.  This interpreter is closer to Node in that it has no DOM.\n  scope.proto = this.OBJECT_PROTO;\n  this.setProperty(scope, 'constructor', this.OBJECT,\n                   Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.initArray(scope);\n  this.initString(scope);\n  this.initBoolean(scope);\n  this.initNumber(scope);\n  this.initDate(scope);\n  this.initRegExp(scope);\n  this.initError(scope);\n  this.initMath(scope);\n  this.initJSON(scope);\n\n  // Initialize global functions.\n  var thisInterpreter = this;\n  var func = this.createNativeFunction(\n      function(x) {throw EvalError(\"Can't happen\");}, false);\n  func.eval = true;\n  this.setProperty(scope, 'eval', func);\n\n  this.setProperty(scope, 'parseInt',\n      this.createNativeFunction(parseInt, false));\n  this.setProperty(scope, 'parseFloat',\n      this.createNativeFunction(parseFloat, false));\n\n  this.setProperty(scope, 'isNaN',\n      this.createNativeFunction(isNaN, false));\n\n  this.setProperty(scope, 'isFinite',\n      this.createNativeFunction(isFinite, false));\n\n  var strFunctions = [\n    [escape, 'escape'], [unescape, 'unescape'],\n    [decodeURI, 'decodeURI'], [decodeURIComponent, 'decodeURIComponent'],\n    [encodeURI, 'encodeURI'], [encodeURIComponent, 'encodeURIComponent']\n  ];\n  for (var i = 0; i < strFunctions.length; i++) {\n    var wrapper = (function(nativeFunc) {\n      return function(str) {\n        try {\n          return nativeFunc(str);\n        } catch (e) {\n          // decodeURI('%xy') will throw an error.  Catch and rethrow.\n          thisInterpreter.throwException(thisInterpreter.URI_ERROR, e.message);\n        }\n      };\n    })(strFunctions[i][0]);\n    this.setProperty(scope, strFunctions[i][1],\n        this.createNativeFunction(wrapper, false),\n        Interpreter.NONENUMERABLE_DESCRIPTOR);\n  }\n  // Preserve publicly properties from being pruned/renamed by JS compilers.\n  // Add others as needed.\n  this['OBJECT'] = this.OBJECT; this['OBJECT_PROTO'] = this.OBJECT_PROTO;\n  this['FUNCTION'] = this.FUNCTION; this['FUNCTION_PROTO'] = this.FUNCTION_PROTO;\n  this['ARRAY'] = this.ARRAY; this['ARRAY_PROTO'] = this.ARRAY_PROTO;\n  this['REGEXP'] = this.REGEXP; this['REGEXP_PROTO'] = this.REGEXP_PROTO;\n  this['DATE'] = this.DATE; this['DATE_PROTO'] = this.DATE_PROTO;\n  // The following properties are obsolete.  Do not use.\n  this['UNDEFINED'] = undefined; this['NULL'] = null; this['NAN'] = NaN;\n  this['TRUE'] = true; this['FALSE'] = false; this['STRING_EMPTY'] = '';\n  this['NUMBER_ZERO'] = 0; this['NUMBER_ONE'] = 1;\n\n  // Run any user-provided initialization.\n  if (this.initFunc_) {\n    this.initFunc_(this, scope);\n  }\n};\n\n/**\n * Initialize the Function class.\n * @param {!Interpreter.Object} scope Global scope.\n */\nInterpreter.prototype.initFunction = function(scope) {\n  var thisInterpreter = this;\n  var wrapper;\n  var identifierRegexp = /^[A-Za-z_$][\\w$]*$/;\n  // Function constructor.\n  wrapper = function(var_args) {\n    if (thisInterpreter.calledWithNew()) {\n      // Called as new Function().\n      var newFunc = this;\n    } else {\n      // Called as Function().\n      var newFunc =\n          thisInterpreter.createObjectProto(thisInterpreter.FUNCTION_PROTO);\n    }\n    if (arguments.length) {\n      var code = String(arguments[arguments.length - 1]);\n    } else {\n      var code = '';\n    }\n    var argsStr = Array.prototype.slice.call(arguments, 0, -1).join(',').trim();\n    if (argsStr) {\n      var args = argsStr.split(/\\s*,\\s*/);\n      for (var i = 0; i < args.length; i++) {\n        var name = args[i];\n        if (!identifierRegexp.test(name)) {\n          thisInterpreter.throwException(thisInterpreter.SYNTAX_ERROR,\n              'Invalid function argument: ' + name);\n        }\n      }\n      argsStr = args.join(', ');\n    }\n    // Interestingly, the scope for constructed functions is the global scope,\n    // even if they were constructed in some other scope.\n    newFunc.parentScope = thisInterpreter.global;\n    // Acorn needs to parse code in the context of a function or else 'return'\n    // statements will be syntax errors.\n    try {\n      var ast = acorn.parse('(function(' + argsStr + ') {' + code + '})',\n          Interpreter.PARSE_OPTIONS);\n    } catch (e) {\n      // Acorn threw a SyntaxError.  Rethrow as a trappable error.\n      thisInterpreter.throwException(thisInterpreter.SYNTAX_ERROR,\n          'Invalid code: ' + e.message);\n    }\n    if (ast['body'].length !== 1) {\n      // Function('a', 'return a + 6;}; {alert(1);');\n      thisInterpreter.throwException(thisInterpreter.SYNTAX_ERROR,\n          'Invalid code in function body.');\n    }\n    newFunc.node = ast['body'][0]['expression'];\n    thisInterpreter.setProperty(newFunc, 'length', newFunc.node['length'],\n        Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n    return newFunc;\n  };\n  wrapper.id = this.functionCounter_++;\n  this.FUNCTION = this.createObjectProto(this.FUNCTION_PROTO);\n\n  this.setProperty(scope, 'Function', this.FUNCTION);\n  // Manually setup type and prototype because createObj doesn't recognize\n  // this object as a function (this.FUNCTION did not exist).\n  this.setProperty(this.FUNCTION, 'prototype', this.FUNCTION_PROTO,\n                   Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.FUNCTION.nativeFunc = wrapper;\n\n  // Configure Function.prototype.\n  this.setProperty(this.FUNCTION_PROTO, 'constructor', this.FUNCTION,\n                   Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.FUNCTION_PROTO.nativeFunc = function() {};\n  this.FUNCTION_PROTO.nativeFunc.id = this.functionCounter_++;\n  this.setProperty(this.FUNCTION_PROTO, 'length', 0,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n\n  var boxThis = function(value) {\n    // In non-strict mode 'this' must be an object.\n    if ((!value || !value.isObject) && !thisInterpreter.getScope().strict) {\n      if (value === undefined || value === null) {\n        // 'Undefined' and 'null' are changed to global object.\n        value = thisInterpreter.global;\n      } else {\n        // Primitives must be boxed in non-strict mode.\n        var box = thisInterpreter.createObjectProto(\n            thisInterpreter.getPrototype(value));\n        box.data = value;\n        value = box;\n      }\n    }\n    return value;\n  };\n\n  wrapper = function(thisArg, args) {\n    var state =\n        thisInterpreter.stateStack[thisInterpreter.stateStack.length - 1];\n    // Rewrite the current 'CallExpression' to apply a different function.\n    state.func_ = this;\n    // Assign the 'this' object.\n    state.funcThis_ = boxThis(thisArg);\n    // Bind any provided arguments.\n    state.arguments_ = [];\n    if (args !== null && args !== undefined) {\n      if (args.isObject) {\n        state.arguments_ = thisInterpreter.arrayPseudoToNative(args);\n      } else {\n        thisInterpreter.throwException(thisInterpreter.TYPE_ERROR,\n            'CreateListFromArrayLike called on non-object');\n      }\n    }\n    state.doneExec_ = false;\n  };\n  this.setNativeFunctionPrototype(this.FUNCTION, 'apply', wrapper);\n\n  wrapper = function(thisArg /*, var_args */) {\n    var state =\n        thisInterpreter.stateStack[thisInterpreter.stateStack.length - 1];\n    // Rewrite the current 'CallExpression' to call a different function.\n    state.func_ = this;\n    // Assign the 'this' object.\n    state.funcThis_ = boxThis(thisArg);\n    // Bind any provided arguments.\n    state.arguments_ = [];\n    for (var i = 1; i < arguments.length; i++) {\n      state.arguments_.push(arguments[i]);\n    }\n    state.doneExec_ = false;\n  };\n  this.setNativeFunctionPrototype(this.FUNCTION, 'call', wrapper);\n\n  this.polyfills_.push(\n// Polyfill copied from:\n// developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_objects/Function/bind\n\"Object.defineProperty(Function.prototype, 'bind',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function(oThis) {\",\n    \"if (typeof this !== 'function') {\",\n      \"throw TypeError('What is trying to be bound is not callable');\",\n    \"}\",\n    \"var aArgs   = Array.prototype.slice.call(arguments, 1),\",\n        \"fToBind = this,\",\n        \"fNOP    = function() {},\",\n        \"fBound  = function() {\",\n          \"return fToBind.apply(this instanceof fNOP\",\n                 \"? this\",\n                 \": oThis,\",\n                 \"aArgs.concat(Array.prototype.slice.call(arguments)));\",\n        \"};\",\n    \"if (this.prototype) {\",\n      \"fNOP.prototype = this.prototype;\",\n    \"}\",\n    \"fBound.prototype = new fNOP();\",\n    \"return fBound;\",\n  \"}\",\n\"});\",\n\"\");\n\n  // Function has no parent to inherit from, so it needs its own mandatory\n  // toString and valueOf functions.\n  wrapper = function() {\n    return String(this);\n  };\n  this.setNativeFunctionPrototype(this.FUNCTION, 'toString', wrapper);\n  this.setProperty(this.FUNCTION, 'toString',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n  wrapper = function() {\n    return this.valueOf();\n  };\n  this.setNativeFunctionPrototype(this.FUNCTION, 'valueOf', wrapper);\n  this.setProperty(this.FUNCTION, 'valueOf',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n};\n\n/**\n * Initialize the Object class.\n * @param {!Interpreter.Object} scope Global scope.\n */\nInterpreter.prototype.initObject = function(scope) {\n  var thisInterpreter = this;\n  var wrapper;\n  // Object constructor.\n  wrapper = function(value) {\n    if (value === undefined || value === null) {\n      // Create a new object.\n      if (thisInterpreter.calledWithNew()) {\n        // Called as new Object().\n        return this;\n      } else {\n        // Called as Object().\n        return thisInterpreter.createObjectProto(thisInterpreter.OBJECT_PROTO);\n      }\n    }\n    if (!value.isObject) {\n      // Wrap the value as an object.\n      var box = thisInterpreter.createObjectProto(\n          thisInterpreter.getPrototype(value));\n      box.data = value;\n      return box;\n    }\n    // Return the provided object.\n    return value;\n  };\n  this.OBJECT = this.createNativeFunction(wrapper, true);\n  // Throw away the created prototype and use the root prototype.\n  this.setProperty(this.OBJECT, 'prototype', this.OBJECT_PROTO,\n                   Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(this.OBJECT_PROTO, 'constructor', this.OBJECT,\n                   Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(scope, 'Object', this.OBJECT);\n\n  /**\n   * Checks if the provided value is null or undefined.\n   * If so, then throw an error in the call stack.\n   * @param {Interpreter.Value} value Value to check.\n   */\n  var throwIfNullUndefined = function(value) {\n    if (value === undefined || value === null) {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR,\n          \"Cannot convert '\" + value + \"' to object\");\n    }\n  };\n\n  // Static methods on Object.\n  wrapper = function(obj) {\n    throwIfNullUndefined(obj);\n    var props = obj.isObject ? obj.properties : obj;\n    return thisInterpreter.arrayNativeToPseudo(\n        Object.getOwnPropertyNames(props));\n  };\n  this.setProperty(this.OBJECT, 'getOwnPropertyNames',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  wrapper = function(obj) {\n    throwIfNullUndefined(obj);\n    if (obj.isObject) {\n      obj = obj.properties;\n    }\n    return thisInterpreter.arrayNativeToPseudo(Object.keys(obj));\n  };\n  this.setProperty(this.OBJECT, 'keys',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  wrapper = function(proto) {\n    // Support for the second argument is the responsibility of a polyfill.\n    if (proto === null) {\n      return thisInterpreter.createObjectProto(null);\n    }\n    if (proto === undefined || !proto.isObject) {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR,\n          'Object prototype may only be an Object or null');\n    }\n    return thisInterpreter.createObjectProto(proto);\n  };\n  this.setProperty(this.OBJECT, 'create',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  // Add a polyfill to handle create's second argument.\n  this.polyfills_.push(\n\"(function() {\",\n  \"var create_ = Object.create;\",\n  \"Object.create = function(proto, props) {\",\n    \"var obj = create_(proto);\",\n    \"props && Object.defineProperties(obj, props);\",\n    \"return obj;\",\n  \"};\",\n\"})();\",\n\"\");\n\n  wrapper = function(obj, prop, descriptor) {\n    prop = String(prop);\n    if (!obj || !obj.isObject) {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR,\n          'Object.defineProperty called on non-object');\n    }\n    if (!descriptor || !descriptor.isObject) {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR,\n          'Property description must be an object');\n    }\n    if (!obj.properties[prop] && obj.preventExtensions) {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR,\n          \"Can't define property '\" + prop + \"', object is not extensible\");\n    }\n    // The polyfill guarantees no inheritance and no getter functions.\n    // Therefore the descriptor properties map is the native object needed.\n    thisInterpreter.setProperty(obj, prop, Interpreter.VALUE_IN_DESCRIPTOR,\n                                descriptor.properties);\n    return obj;\n  };\n  this.setProperty(this.OBJECT, 'defineProperty',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  this.polyfills_.push(\n// Flatten the descriptor to remove any inheritance or getter functions.\n\"(function() {\",\n  \"var defineProperty_ = Object.defineProperty;\",\n  \"Object.defineProperty = function(obj, prop, d1) {\",\n    \"var d2 = {};\",\n    \"if ('configurable' in d1) d2.configurable = d1.configurable;\",\n    \"if ('enumerable' in d1) d2.enumerable = d1.enumerable;\",\n    \"if ('writable' in d1) d2.writable = d1.writable;\",\n    \"if ('value' in d1) d2.value = d1.value;\",\n    \"if ('get' in d1) d2.get = d1.get;\",\n    \"if ('set' in d1) d2.set = d1.set;\",\n    \"return defineProperty_(obj, prop, d2);\",\n  \"};\",\n\"})();\",\n\n\"Object.defineProperty(Object, 'defineProperties',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function(obj, props) {\",\n    \"var keys = Object.keys(props);\",\n    \"for (var i = 0; i < keys.length; i++) {\",\n      \"Object.defineProperty(obj, keys[i], props[keys[i]]);\",\n    \"}\",\n    \"return obj;\",\n  \"}\",\n\"});\",\n\"\");\n\n  wrapper = function(obj, prop) {\n    if (!obj || !obj.isObject) {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR,\n          'Object.getOwnPropertyDescriptor called on non-object');\n    }\n    prop = String(prop);\n    if (!(prop in obj.properties)) {\n      return undefined;\n    }\n    var descriptor = Object.getOwnPropertyDescriptor(obj.properties, prop);\n    var getter = obj.getter[prop];\n    var setter = obj.setter[prop];\n\n    if (getter || setter) {\n      descriptor.get = getter;\n      descriptor.set = setter;\n      delete descriptor.value;\n      delete descriptor.writable;\n    }\n    // Preserve value, but remove it for the nativeToPseudo call.\n    var value = descriptor.value;\n    var hasValue = 'value' in descriptor;\n    delete descriptor.value;\n    var pseudoDescriptor = thisInterpreter.nativeToPseudo(descriptor);\n    if (hasValue) {\n      thisInterpreter.setProperty(pseudoDescriptor, 'value', value);\n    }\n    return pseudoDescriptor;\n  };\n  this.setProperty(this.OBJECT, 'getOwnPropertyDescriptor',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  wrapper = function(obj) {\n    throwIfNullUndefined(obj);\n    return thisInterpreter.getPrototype(obj);\n  };\n  this.setProperty(this.OBJECT, 'getPrototypeOf',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  wrapper = function(obj) {\n    return Boolean(obj) && !obj.preventExtensions;\n  };\n  this.setProperty(this.OBJECT, 'isExtensible',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  wrapper = function(obj) {\n    if (obj && obj.isObject) {\n      obj.preventExtensions = true;\n    }\n    return obj;\n  };\n  this.setProperty(this.OBJECT, 'preventExtensions',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  // Instance methods on Object.\n  this.setNativeFunctionPrototype(this.OBJECT, 'toString',\n      Interpreter.Object.prototype.toString);\n  this.setNativeFunctionPrototype(this.OBJECT, 'toLocaleString',\n      Interpreter.Object.prototype.toString);\n  this.setNativeFunctionPrototype(this.OBJECT, 'valueOf',\n      Interpreter.Object.prototype.valueOf);\n\n  wrapper = function(prop) {\n    throwIfNullUndefined(this);\n    if (!this.isObject) {\n      return this.hasOwnProperty(prop);\n    }\n    return String(prop) in this.properties;\n  };\n  this.setNativeFunctionPrototype(this.OBJECT, 'hasOwnProperty', wrapper);\n\n  wrapper = function(prop) {\n    throwIfNullUndefined(this);\n    if (!this.isObject) {\n      return this.propertyIsEnumerable(prop);\n    }\n    return Object.prototype.propertyIsEnumerable.call(this.properties, prop);\n  };\n  this.setNativeFunctionPrototype(this.OBJECT, 'propertyIsEnumerable', wrapper);\n\n  wrapper = function(obj) {\n    while (true) {\n      // Note, circular loops shouldn't be possible.\n      obj = thisInterpreter.getPrototype(obj);\n      if (!obj) {\n        // No parent; reached the top.\n        return false;\n      }\n      if (obj === this) {\n        return true;\n      }\n    }\n  };\n  this.setNativeFunctionPrototype(this.OBJECT, 'isPrototypeOf',  wrapper);\n};\n\n/**\n * Initialize the Array class.\n * @param {!Interpreter.Object} scope Global scope.\n */\nInterpreter.prototype.initArray = function(scope) {\n  var thisInterpreter = this;\n  var wrapper;\n  // Array constructor.\n  wrapper = function(var_args) {\n    if (thisInterpreter.calledWithNew()) {\n      // Called as new Array().\n      var newArray = this;\n    } else {\n      // Called as Array().\n      var newArray =\n          thisInterpreter.createObjectProto(thisInterpreter.ARRAY_PROTO);\n    }\n    var first = arguments[0];\n    if (arguments.length === 1 && typeof first === 'number') {\n      if (isNaN(Interpreter.legalArrayLength(first))) {\n        thisInterpreter.throwException(thisInterpreter.RANGE_ERROR,\n                                       'Invalid array length');\n      }\n      newArray.properties.length = first;\n    } else {\n      for (var i = 0; i < arguments.length; i++) {\n        newArray.properties[i] = arguments[i];\n      }\n      newArray.properties.length = i;\n    }\n    return newArray;\n  };\n  this.ARRAY = this.createNativeFunction(wrapper, true);\n  this.ARRAY_PROTO = this.ARRAY.properties['prototype'];\n  this.setProperty(scope, 'Array', this.ARRAY);\n\n  // Static methods on Array.\n  wrapper = function(obj) {\n    return obj && obj.class === 'Array';\n  };\n  this.setProperty(this.ARRAY, 'isArray',\n                   this.createNativeFunction(wrapper, false),\n                   Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  // Instance methods on Array.\n  wrapper = function() {\n    return Array.prototype.pop.call(this.properties);\n  };\n  this.setNativeFunctionPrototype(this.ARRAY, 'pop', wrapper);\n\n  wrapper = function(var_args) {\n    return Array.prototype.push.apply(this.properties, arguments);\n  };\n  this.setNativeFunctionPrototype(this.ARRAY, 'push', wrapper);\n\n  wrapper = function() {\n    return Array.prototype.shift.call(this.properties);\n  };\n  this.setNativeFunctionPrototype(this.ARRAY, 'shift', wrapper);\n\n  wrapper = function(var_args) {\n    return Array.prototype.unshift.apply(this.properties, arguments);\n  };\n  this.setNativeFunctionPrototype(this.ARRAY, 'unshift', wrapper);\n\n  wrapper = function() {\n    Array.prototype.reverse.call(this.properties);\n    return this;\n  };\n  this.setNativeFunctionPrototype(this.ARRAY, 'reverse', wrapper);\n\n  wrapper = function(index, howmany /*, var_args*/) {\n    var list = Array.prototype.splice.apply(this.properties, arguments);\n    return thisInterpreter.arrayNativeToPseudo(list);\n  };\n  this.setNativeFunctionPrototype(this.ARRAY, 'splice', wrapper);\n\n  wrapper = function(opt_begin, opt_end) {\n    var list = Array.prototype.slice.call(this.properties, opt_begin, opt_end);\n    return thisInterpreter.arrayNativeToPseudo(list);\n  };\n  this.setNativeFunctionPrototype(this.ARRAY, 'slice', wrapper);\n\n  wrapper = function(opt_separator) {\n    return Array.prototype.join.call(this.properties, opt_separator);\n  };\n  this.setNativeFunctionPrototype(this.ARRAY, 'join', wrapper);\n\n  wrapper = function(var_args) {\n    var list = [];\n    var length = 0;\n    // Start by copying the current array.\n    var iLength = thisInterpreter.getProperty(this, 'length');\n    for (var i = 0; i < iLength; i++) {\n      if (thisInterpreter.hasProperty(this, i)) {\n        var element = thisInterpreter.getProperty(this, i);\n        list[length] = element;\n      }\n      length++;\n    }\n    // Loop through all arguments and copy them in.\n    for (var i = 0; i < arguments.length; i++) {\n      var value = arguments[i];\n      if (thisInterpreter.isa(value, thisInterpreter.ARRAY)) {\n        var jLength = thisInterpreter.getProperty(value, 'length');\n        for (var j = 0; j < jLength; j++) {\n          if (thisInterpreter.hasProperty(value, j)) {\n            list[length] = thisInterpreter.getProperty(value, j);\n          }\n          length++;\n        }\n      } else {\n        list[length] = value;\n      }\n    }\n    return thisInterpreter.arrayNativeToPseudo(list);\n  };\n  this.setNativeFunctionPrototype(this.ARRAY, 'concat', wrapper);\n\n  wrapper = function(searchElement, opt_fromIndex) {\n    return Array.prototype.indexOf.apply(this.properties, arguments);\n  };\n  this.setNativeFunctionPrototype(this.ARRAY, 'indexOf', wrapper);\n\n  wrapper = function(searchElement, opt_fromIndex) {\n    return Array.prototype.lastIndexOf.apply(this.properties, arguments);\n  };\n  this.setNativeFunctionPrototype(this.ARRAY, 'lastIndexOf', wrapper);\n\n  wrapper = function() {\n    Array.prototype.sort.call(this.properties);\n    return this;\n  };\n  this.setNativeFunctionPrototype(this.ARRAY, 'sort', wrapper);\n\n  this.polyfills_.push(\n// Polyfill copied from:\n// developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/every\n\"Object.defineProperty(Array.prototype, 'every',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function(callbackfn, thisArg) {\",\n    \"if (!this || typeof callbackfn !== 'function') throw TypeError();\",\n    \"var T, k;\",\n    \"var O = Object(this);\",\n    \"var len = O.length >>> 0;\",\n    \"if (arguments.length > 1) T = thisArg;\",\n    \"k = 0;\",\n    \"while (k < len) {\",\n      \"if (k in O && !callbackfn.call(T, O[k], k, O)) return false;\",\n      \"k++;\",\n    \"}\",\n    \"return true;\",\n  \"}\",\n\"});\",\n\n// Polyfill copied from:\n// developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\n\"Object.defineProperty(Array.prototype, 'filter',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function(fun/*, thisArg*/) {\",\n    \"if (this === void 0 || this === null || typeof fun !== 'function') throw TypeError();\",\n    \"var t = Object(this);\",\n    \"var len = t.length >>> 0;\",\n    \"var res = [];\",\n    \"var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\",\n    \"for (var i = 0; i < len; i++) {\",\n      \"if (i in t) {\",\n        \"var val = t[i];\",\n        \"if (fun.call(thisArg, val, i, t)) res.push(val);\",\n      \"}\",\n    \"}\",\n    \"return res;\",\n  \"}\",\n\"});\",\n\n// Polyfill copied from:\n// developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\n\"Object.defineProperty(Array.prototype, 'forEach',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function(callback, thisArg) {\",\n    \"if (!this || typeof callback !== 'function') throw TypeError();\",\n    \"var T, k;\",\n    \"var O = Object(this);\",\n    \"var len = O.length >>> 0;\",\n    \"if (arguments.length > 1) T = thisArg;\",\n    \"k = 0;\",\n    \"while (k < len) {\",\n      \"if (k in O) callback.call(T, O[k], k, O);\",\n      \"k++;\",\n    \"}\",\n  \"}\",\n\"});\",\n\n// Polyfill copied from:\n// developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/map\n\"Object.defineProperty(Array.prototype, 'map',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function(callback, thisArg) {\",\n    \"if (!this || typeof callback !== 'function') new TypeError;\",\n    \"var T, A, k;\",\n    \"var O = Object(this);\",\n    \"var len = O.length >>> 0;\",\n    \"if (arguments.length > 1) T = thisArg;\",\n    \"A = new Array(len);\",\n    \"k = 0;\",\n    \"while (k < len) {\",\n      \"if (k in O) A[k] = callback.call(T, O[k], k, O);\",\n      \"k++;\",\n    \"}\",\n    \"return A;\",\n  \"}\",\n\"});\",\n\n// Polyfill copied from:\n// developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\n\"Object.defineProperty(Array.prototype, 'reduce',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function(callback /*, initialValue*/) {\",\n    \"if (!this || typeof callback !== 'function') throw TypeError();\",\n    \"var t = Object(this), len = t.length >>> 0, k = 0, value;\",\n    \"if (arguments.length === 2) {\",\n      \"value = arguments[1];\",\n    \"} else {\",\n      \"while (k < len && !(k in t)) k++;\",\n      \"if (k >= len) {\",\n        \"throw TypeError('Reduce of empty array with no initial value');\",\n      \"}\",\n      \"value = t[k++];\",\n    \"}\",\n    \"for (; k < len; k++) {\",\n      \"if (k in t) value = callback(value, t[k], k, t);\",\n    \"}\",\n    \"return value;\",\n  \"}\",\n\"});\",\n\n// Polyfill copied from:\n// developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/ReduceRight\n\"Object.defineProperty(Array.prototype, 'reduceRight',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function(callback /*, initialValue*/) {\",\n    \"if (null === this || 'undefined' === typeof this || 'function' !== typeof callback) throw TypeError();\",\n    \"var t = Object(this), len = t.length >>> 0, k = len - 1, value;\",\n    \"if (arguments.length >= 2) {\",\n      \"value = arguments[1];\",\n    \"} else {\",\n      \"while (k >= 0 && !(k in t)) k--;\",\n      \"if (k < 0) {\",\n        \"throw TypeError('Reduce of empty array with no initial value');\",\n      \"}\",\n      \"value = t[k--];\",\n    \"}\",\n    \"for (; k >= 0; k--) {\",\n      \"if (k in t) value = callback(value, t[k], k, t);\",\n    \"}\",\n    \"return value;\",\n  \"}\",\n\"});\",\n\n// Polyfill copied from:\n// developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/some\n\"Object.defineProperty(Array.prototype, 'some',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function(fun/*, thisArg*/) {\",\n    \"if (!this || typeof fun !== 'function') throw TypeError();\",\n    \"var t = Object(this);\",\n    \"var len = t.length >>> 0;\",\n    \"var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\",\n    \"for (var i = 0; i < len; i++) {\",\n      \"if (i in t && fun.call(thisArg, t[i], i, t)) {\",\n        \"return true;\",\n      \"}\",\n    \"}\",\n    \"return false;\",\n  \"}\",\n\"});\",\n\n\n\"(function() {\",\n  \"var sort_ = Array.prototype.sort;\",\n  \"Array.prototype.sort = function(opt_comp) {\",\n    // Fast native sort.\n    \"if (typeof opt_comp !== 'function') {\",\n      \"return sort_.call(this);\",\n    \"}\",\n    // Slow bubble sort.\n    \"for (var i = 0; i < this.length; i++) {\",\n      \"var changes = 0;\",\n      \"for (var j = 0; j < this.length - i - 1; j++) {\",\n        \"if (opt_comp(this[j], this[j + 1]) > 0) {\",\n          \"var swap = this[j];\",\n          \"this[j] = this[j + 1];\",\n          \"this[j + 1] = swap;\",\n          \"changes++;\",\n        \"}\",\n      \"}\",\n      \"if (!changes) break;\",\n    \"}\",\n    \"return this;\",\n  \"};\",\n\"})();\",\n\n\"Object.defineProperty(Array.prototype, 'toLocaleString',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function() {\",\n    \"var out = [];\",\n    \"for (var i = 0; i < this.length; i++) {\",\n      \"out[i] = (this[i] === null || this[i] === undefined) ? '' : this[i].toLocaleString();\",\n    \"}\",\n    \"return out.join(',');\",\n  \"}\",\n\"});\",\n\"\");\n};\n\n/**\n * Initialize the String class.\n * @param {!Interpreter.Object} scope Global scope.\n */\nInterpreter.prototype.initString = function(scope) {\n  var thisInterpreter = this;\n  var wrapper;\n  // String constructor.\n  wrapper = function(value) {\n    value = String(value);\n    if (thisInterpreter.calledWithNew()) {\n      // Called as new String().\n      this.data = value;\n      return this;\n    } else {\n      // Called as String().\n      return value;\n    }\n  };\n  this.STRING = this.createNativeFunction(wrapper, true);\n  this.setProperty(scope, 'String', this.STRING);\n\n  // Static methods on String.\n  this.setProperty(this.STRING, 'fromCharCode',\n      this.createNativeFunction(String.fromCharCode, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  // Instance methods on String.\n  // Methods with exclusively primitive arguments.\n  var functions = ['charAt', 'charCodeAt', 'concat', 'indexOf', 'lastIndexOf',\n      'slice', 'substr', 'substring', 'toLocaleLowerCase', 'toLocaleUpperCase',\n      'toLowerCase', 'toUpperCase', 'trim'];\n  for (var i = 0; i < functions.length; i++) {\n    this.setNativeFunctionPrototype(this.STRING, functions[i],\n                                    String.prototype[functions[i]]);\n  }\n\n  wrapper = function(compareString, locales, options) {\n    locales = locales ? thisInterpreter.pseudoToNative(locales) : undefined;\n    options = options ? thisInterpreter.pseudoToNative(options) : undefined;\n    return String(this).localeCompare(compareString, locales, options);\n  };\n  this.setNativeFunctionPrototype(this.STRING, 'localeCompare', wrapper);\n\n  wrapper = function(separator, limit, callback) {\n    var string = String(this);\n    limit = limit ? Number(limit) : undefined;\n    // Example of catastrophic split RegExp:\n    // 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaac'.split(/^(a+)+b/)\n    if (thisInterpreter.isa(separator, thisInterpreter.REGEXP)) {\n      separator = separator.data;\n      thisInterpreter.maybeThrowRegExp(separator, callback);\n      if (thisInterpreter.REGEXP_MODE === 2) {\n        if (Interpreter.vm) {\n          // Run split in vm.\n          var sandbox = {\n            'string': string,\n            'separator': separator,\n            'limit': limit\n          };\n          var code = 'string.split(separator, limit)';\n          var jsList =\n              thisInterpreter.vmCall(code, sandbox, separator, callback);\n          if (jsList !== Interpreter.REGEXP_TIMEOUT) {\n            callback(thisInterpreter.arrayNativeToPseudo(jsList));\n          }\n        } else {\n          // Run split in separate thread.\n          var splitWorker = thisInterpreter.createWorker();\n          var pid = thisInterpreter.regExpTimeout(separator, splitWorker,\n              callback);\n          splitWorker.onmessage = function(e) {\n            clearTimeout(pid);\n            callback(thisInterpreter.arrayNativeToPseudo(e.data));\n          };\n          splitWorker.postMessage(['split', string, separator, limit]);\n        }\n        return;\n      }\n    }\n    // Run split natively.\n    var jsList = string.split(separator, limit);\n    callback(thisInterpreter.arrayNativeToPseudo(jsList));\n  };\n  this.setAsyncFunctionPrototype(this.STRING, 'split', wrapper);\n\n  wrapper = function(regexp, callback) {\n    var string = String(this);\n    if (thisInterpreter.isa(regexp, thisInterpreter.REGEXP)) {\n      regexp = regexp.data;\n    } else {\n      regexp = new RegExp(regexp);\n    }\n    // Example of catastrophic match RegExp:\n    // 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaac'.match(/^(a+)+b/)\n    thisInterpreter.maybeThrowRegExp(regexp, callback);\n    if (thisInterpreter.REGEXP_MODE === 2) {\n      if (Interpreter.vm) {\n        // Run match in vm.\n        var sandbox = {\n          'string': string,\n          'regexp': regexp\n        };\n        var code = 'string.match(regexp)';\n        var m = thisInterpreter.vmCall(code, sandbox, regexp, callback);\n        if (m !== Interpreter.REGEXP_TIMEOUT) {\n          callback(m && thisInterpreter.arrayNativeToPseudo(m));\n        }\n      } else {\n        // Run match in separate thread.\n        var matchWorker = thisInterpreter.createWorker();\n        var pid = thisInterpreter.regExpTimeout(regexp, matchWorker, callback);\n        matchWorker.onmessage = function(e) {\n          clearTimeout(pid);\n          callback(e.data && thisInterpreter.arrayNativeToPseudo(e.data));\n        };\n        matchWorker.postMessage(['match', string, regexp]);\n      }\n      return;\n    }\n    // Run match natively.\n    var m = string.match(regexp);\n    callback(m && thisInterpreter.arrayNativeToPseudo(m));\n  };\n  this.setAsyncFunctionPrototype(this.STRING, 'match', wrapper);\n\n  wrapper = function(regexp, callback) {\n    var string = String(this);\n    if (thisInterpreter.isa(regexp, thisInterpreter.REGEXP)) {\n      regexp = regexp.data;\n    } else {\n      regexp = new RegExp(regexp);\n    }\n    // Example of catastrophic search RegExp:\n    // 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaac'.search(/^(a+)+b/)\n    thisInterpreter.maybeThrowRegExp(regexp, callback);\n    if (thisInterpreter.REGEXP_MODE === 2) {\n      if (Interpreter.vm) {\n        // Run search in vm.\n        var sandbox = {\n          'string': string,\n          'regexp': regexp\n        };\n        var code = 'string.search(regexp)';\n        var n = thisInterpreter.vmCall(code, sandbox, regexp, callback);\n        if (n !== Interpreter.REGEXP_TIMEOUT) {\n          callback(n);\n        }\n      } else {\n        // Run search in separate thread.\n        var searchWorker = thisInterpreter.createWorker();\n        var pid = thisInterpreter.regExpTimeout(regexp, searchWorker, callback);\n        searchWorker.onmessage = function(e) {\n          clearTimeout(pid);\n          callback(e.data);\n        };\n        searchWorker.postMessage(['search', string, regexp]);\n      }\n      return;\n    }\n    // Run search natively.\n    callback(string.search(regexp));\n  };\n  this.setAsyncFunctionPrototype(this.STRING, 'search', wrapper);\n\n  wrapper = function(substr, newSubstr, callback) {\n    // Support for function replacements is the responsibility of a polyfill.\n    var string = String(this);\n    newSubstr = String(newSubstr);\n    // Example of catastrophic replace RegExp:\n    // 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaac'.replace(/^(a+)+b/, '')\n    if (thisInterpreter.isa(substr, thisInterpreter.REGEXP)) {\n      substr = substr.data;\n      thisInterpreter.maybeThrowRegExp(substr, callback);\n      if (thisInterpreter.REGEXP_MODE === 2) {\n        if (Interpreter.vm) {\n          // Run replace in vm.\n          var sandbox = {\n            'string': string,\n            'substr': substr,\n            'newSubstr': newSubstr\n          };\n          var code = 'string.replace(substr, newSubstr)';\n          var str = thisInterpreter.vmCall(code, sandbox, substr, callback);\n          if (str !== Interpreter.REGEXP_TIMEOUT) {\n            callback(str);\n          }\n        } else {\n          // Run replace in separate thread.\n          var replaceWorker = thisInterpreter.createWorker();\n          var pid = thisInterpreter.regExpTimeout(substr, replaceWorker,\n              callback);\n          replaceWorker.onmessage = function(e) {\n            clearTimeout(pid);\n            callback(e.data);\n          };\n          replaceWorker.postMessage(['replace', string, substr, newSubstr]);\n        }\n        return;\n      }\n    }\n    // Run replace natively.\n    callback(string.replace(substr, newSubstr));\n  };\n  this.setAsyncFunctionPrototype(this.STRING, 'replace', wrapper);\n  // Add a polyfill to handle replace's second argument being a function.\n  this.polyfills_.push(\n\"(function() {\",\n  \"var replace_ = String.prototype.replace;\",\n  \"String.prototype.replace = function(substr, newSubstr) {\",\n    \"if (typeof newSubstr !== 'function') {\",\n      // string.replace(string|regexp, string)\n      \"return replace_.call(this, substr, newSubstr);\",\n    \"}\",\n    \"var str = this;\",\n    \"if (substr instanceof RegExp) {\",  // string.replace(regexp, function)\n      \"var subs = [];\",\n      \"var m = substr.exec(str);\",\n      \"while (m) {\",\n        \"m.push(m.index, str);\",\n        \"var inject = newSubstr.apply(null, m);\",\n        \"subs.push([m.index, m[0].length, inject]);\",\n        \"m = substr.global ? substr.exec(str) : null;\",\n      \"}\",\n      \"for (var i = subs.length - 1; i >= 0; i--) {\",\n        \"str = str.substring(0, subs[i][0]) + subs[i][2] + \" +\n            \"str.substring(subs[i][0] + subs[i][1]);\",\n      \"}\",\n    \"} else {\",                         // string.replace(string, function)\n      \"var i = str.indexOf(substr);\",\n      \"if (i !== -1) {\",\n        \"var inject = newSubstr(str.substr(i, substr.length), i, str);\",\n        \"str = str.substring(0, i) + inject + \" +\n            \"str.substring(i + substr.length);\",\n      \"}\",\n    \"}\",\n    \"return str;\",\n  \"};\",\n\"})();\",\n\"\");\n};\n\n/**\n * Initialize the Boolean class.\n * @param {!Interpreter.Object} scope Global scope.\n */\nInterpreter.prototype.initBoolean = function(scope) {\n  var thisInterpreter = this;\n  var wrapper;\n  // Boolean constructor.\n  wrapper = function(value) {\n    value = Boolean(value);\n    if (thisInterpreter.calledWithNew()) {\n      // Called as new Boolean().\n      this.data = value;\n      return this;\n    } else {\n      // Called as Boolean().\n      return value;\n    }\n  };\n  this.BOOLEAN = this.createNativeFunction(wrapper, true);\n  this.setProperty(scope, 'Boolean', this.BOOLEAN);\n};\n\n/**\n * Initialize the Number class.\n * @param {!Interpreter.Object} scope Global scope.\n */\nInterpreter.prototype.initNumber = function(scope) {\n  var thisInterpreter = this;\n  var wrapper;\n  // Number constructor.\n  wrapper = function(value) {\n    value = Number(value);\n    if (thisInterpreter.calledWithNew()) {\n      // Called as new Number().\n      this.data = value;\n      return this;\n    } else {\n      // Called as Number().\n      return value;\n    }\n  };\n  this.NUMBER = this.createNativeFunction(wrapper, true);\n  this.setProperty(scope, 'Number', this.NUMBER);\n\n  var numConsts = ['MAX_VALUE', 'MIN_VALUE', 'NaN', 'NEGATIVE_INFINITY',\n                   'POSITIVE_INFINITY'];\n  for (var i = 0; i < numConsts.length; i++) {\n    this.setProperty(this.NUMBER, numConsts[i], Number[numConsts[i]],\n        Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  }\n\n  // Instance methods on Number.\n  wrapper = function(fractionDigits) {\n    try {\n      return Number(this).toExponential(fractionDigits);\n    } catch (e) {\n      // Throws if fractionDigits isn't within 0-20.\n      thisInterpreter.throwException(thisInterpreter.ERROR, e.message);\n    }\n  };\n  this.setNativeFunctionPrototype(this.NUMBER, 'toExponential', wrapper);\n\n  wrapper = function(digits) {\n    try {\n      return Number(this).toFixed(digits);\n    } catch (e) {\n      // Throws if digits isn't within 0-20.\n      thisInterpreter.throwException(thisInterpreter.ERROR, e.message);\n    }\n  };\n  this.setNativeFunctionPrototype(this.NUMBER, 'toFixed', wrapper);\n\n  wrapper = function(precision) {\n    try {\n      return Number(this).toPrecision(precision);\n    } catch (e) {\n      // Throws if precision isn't within range (depends on implementation).\n      thisInterpreter.throwException(thisInterpreter.ERROR, e.message);\n    }\n  };\n  this.setNativeFunctionPrototype(this.NUMBER, 'toPrecision', wrapper);\n\n  wrapper = function(radix) {\n    try {\n      return Number(this).toString(radix);\n    } catch (e) {\n      // Throws if radix isn't within 2-36.\n      thisInterpreter.throwException(thisInterpreter.ERROR, e.message);\n    }\n  };\n  this.setNativeFunctionPrototype(this.NUMBER, 'toString', wrapper);\n\n  wrapper = function(locales, options) {\n    locales = locales ? thisInterpreter.pseudoToNative(locales) : undefined;\n    options = options ? thisInterpreter.pseudoToNative(options) : undefined;\n    return Number(this).toLocaleString(locales, options);\n  };\n  this.setNativeFunctionPrototype(this.NUMBER, 'toLocaleString', wrapper);\n};\n\n/**\n * Initialize the Date class.\n * @param {!Interpreter.Object} scope Global scope.\n */\nInterpreter.prototype.initDate = function(scope) {\n  var thisInterpreter = this;\n  var wrapper;\n  // Date constructor.\n  wrapper = function(value, var_args) {\n    if (!thisInterpreter.calledWithNew()) {\n      // Called as Date().\n      // Calling Date() as a function returns a string, no arguments are heeded.\n      return Date();\n    }\n    // Called as new Date().\n    var args = [null].concat(Array.from(arguments));\n    this.data = new (Function.prototype.bind.apply(Date, args));\n    return this;\n  };\n  this.DATE = this.createNativeFunction(wrapper, true);\n  this.DATE_PROTO = this.DATE.properties['prototype'];\n  this.setProperty(scope, 'Date', this.DATE);\n\n  // Static methods on Date.\n  this.setProperty(this.DATE, 'now', this.createNativeFunction(Date.now, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  this.setProperty(this.DATE, 'parse',\n      this.createNativeFunction(Date.parse, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  this.setProperty(this.DATE, 'UTC', this.createNativeFunction(Date.UTC, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  // Instance methods on Date.\n  var functions = ['getDate', 'getDay', 'getFullYear', 'getHours',\n      'getMilliseconds', 'getMinutes', 'getMonth', 'getSeconds', 'getTime',\n      'getTimezoneOffset', 'getUTCDate', 'getUTCDay', 'getUTCFullYear',\n      'getUTCHours', 'getUTCMilliseconds', 'getUTCMinutes', 'getUTCMonth',\n      'getUTCSeconds', 'getYear',\n      'setDate', 'setFullYear', 'setHours', 'setMilliseconds',\n      'setMinutes', 'setMonth', 'setSeconds', 'setTime', 'setUTCDate',\n      'setUTCFullYear', 'setUTCHours', 'setUTCMilliseconds', 'setUTCMinutes',\n      'setUTCMonth', 'setUTCSeconds', 'setYear',\n      'toDateString', 'toISOString', 'toJSON', 'toGMTString',\n      'toLocaleDateString', 'toLocaleString', 'toLocaleTimeString',\n      'toTimeString', 'toUTCString'];\n  for (var i = 0; i < functions.length; i++) {\n    wrapper = (function(nativeFunc) {\n      return function(var_args) {\n        var args = [];\n        for (var i = 0; i < arguments.length; i++) {\n          args[i] = thisInterpreter.pseudoToNative(arguments[i]);\n        }\n        return this.data[nativeFunc].apply(this.data, args);\n      };\n    })(functions[i]);\n    this.setNativeFunctionPrototype(this.DATE, functions[i], wrapper);\n  }\n};\n\n/**\n * Initialize Regular Expression object.\n * @param {!Interpreter.Object} scope Global scope.\n */\nInterpreter.prototype.initRegExp = function(scope) {\n  var thisInterpreter = this;\n  var wrapper;\n  // RegExp constructor.\n  wrapper = function(pattern, flags) {\n    if (thisInterpreter.calledWithNew()) {\n      // Called as new RegExp().\n      var rgx = this;\n    } else {\n      // Called as RegExp().\n      var rgx = thisInterpreter.createObjectProto(thisInterpreter.REGEXP_PROTO);\n    }\n    pattern = pattern ? String(pattern) : '';\n    flags = flags ? String(flags) : '';\n    thisInterpreter.populateRegExp(rgx, new RegExp(pattern, flags));\n    return rgx;\n  };\n  this.REGEXP = this.createNativeFunction(wrapper, true);\n  this.REGEXP_PROTO = this.REGEXP.properties['prototype'];\n  this.setProperty(scope, 'RegExp', this.REGEXP);\n\n  this.setProperty(this.REGEXP.properties['prototype'], 'global', undefined,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(this.REGEXP.properties['prototype'], 'ignoreCase', undefined,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(this.REGEXP.properties['prototype'], 'multiline', undefined,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(this.REGEXP.properties['prototype'], 'source', '(?:)',\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n\n  // Use polyfill to avoid complexity of regexp threads.\n  this.polyfills_.push(\n\"Object.defineProperty(RegExp.prototype, 'test',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function(str) {\",\n    \"return String(str).search(this) !== -1\",\n  \"}\",\n\"});\");\n\n  wrapper = function(string, callback) {\n    var thisPseudoRegExp = this;\n    var regexp = thisPseudoRegExp.data;\n    string = String(string);\n    // Get lastIndex from wrapped regex, since this is settable.\n    regexp.lastIndex =\n        Number(thisInterpreter.getProperty(this, 'lastIndex'));\n    // Example of catastrophic exec RegExp:\n    // /^(a+)+b/.exec('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaac')\n    thisInterpreter.maybeThrowRegExp(regexp, callback);\n    if (thisInterpreter.REGEXP_MODE === 2) {\n      if (Interpreter.vm) {\n        // Run exec in vm.\n        var sandbox = {\n          'string': string,\n          'regexp': regexp\n        };\n        var code = 'regexp.exec(string)';\n        var match = thisInterpreter.vmCall(code, sandbox, regexp, callback);\n        if (match !== Interpreter.REGEXP_TIMEOUT) {\n          thisInterpreter.setProperty(thisPseudoRegExp, 'lastIndex',\n              regexp.lastIndex);\n          callback(matchToPseudo(match));\n        }\n      } else {\n        // Run exec in separate thread.\n        // Note that lastIndex is not preserved when a RegExp is passed to a\n        // Web Worker.  Thus it needs to be passed back and forth separately.\n        var execWorker = thisInterpreter.createWorker();\n        var pid = thisInterpreter.regExpTimeout(regexp, execWorker, callback);\n        execWorker.onmessage = function(e) {\n          clearTimeout(pid);\n          // Return tuple: [result, lastIndex]\n          thisInterpreter.setProperty(thisPseudoRegExp, 'lastIndex',\n              e.data[1]);\n          callback(matchToPseudo(e.data[0]));\n        };\n        execWorker.postMessage(['exec', regexp, regexp.lastIndex, string]);\n      }\n      return;\n    }\n    // Run exec natively.\n    var match = regexp.exec(string);\n    thisInterpreter.setProperty(thisPseudoRegExp, 'lastIndex',\n        regexp.lastIndex);\n    callback(matchToPseudo(match));\n\n    function matchToPseudo(match) {\n      if (match) {\n        var result = thisInterpreter.arrayNativeToPseudo(match);\n        // match has additional properties.\n        thisInterpreter.setProperty(result, 'index', match.index);\n        thisInterpreter.setProperty(result, 'input', match.input);\n        return result;\n      }\n      return null;\n    }\n  };\n  this.setAsyncFunctionPrototype(this.REGEXP, 'exec', wrapper);\n};\n\n/**\n * Initialize the Error class.\n * @param {!Interpreter.Object} scope Global scope.\n */\nInterpreter.prototype.initError = function(scope) {\n  var thisInterpreter = this;\n  // Error constructor.\n  this.ERROR = this.createNativeFunction(function(opt_message) {\n    if (thisInterpreter.calledWithNew()) {\n      // Called as new Error().\n      var newError = this;\n    } else {\n      // Called as Error().\n      var newError = thisInterpreter.createObject(thisInterpreter.ERROR);\n    }\n    if (opt_message) {\n      thisInterpreter.setProperty(newError, 'message', String(opt_message),\n          Interpreter.NONENUMERABLE_DESCRIPTOR);\n    }\n    return newError;\n  }, true);\n  this.setProperty(scope, 'Error', this.ERROR);\n  this.setProperty(this.ERROR.properties['prototype'], 'message', '',\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(this.ERROR.properties['prototype'], 'name', 'Error',\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  var createErrorSubclass = function(name) {\n    var constructor = thisInterpreter.createNativeFunction(\n        function(opt_message) {\n          if (thisInterpreter.calledWithNew()) {\n            // Called as new XyzError().\n            var newError = this;\n          } else {\n            // Called as XyzError().\n            var newError = thisInterpreter.createObject(constructor);\n          }\n          if (opt_message) {\n            thisInterpreter.setProperty(newError, 'message',\n                String(opt_message), Interpreter.NONENUMERABLE_DESCRIPTOR);\n          }\n          return newError;\n        }, true);\n    thisInterpreter.setProperty(constructor, 'prototype',\n        thisInterpreter.createObject(thisInterpreter.ERROR),\n        Interpreter.NONENUMERABLE_DESCRIPTOR);\n    thisInterpreter.setProperty(constructor.properties['prototype'], 'name',\n        name, Interpreter.NONENUMERABLE_DESCRIPTOR);\n    thisInterpreter.setProperty(scope, name, constructor);\n\n    return constructor;\n  };\n\n  this.EVAL_ERROR = createErrorSubclass('EvalError');\n  this.RANGE_ERROR = createErrorSubclass('RangeError');\n  this.REFERENCE_ERROR = createErrorSubclass('ReferenceError');\n  this.SYNTAX_ERROR = createErrorSubclass('SyntaxError');\n  this.TYPE_ERROR = createErrorSubclass('TypeError');\n  this.URI_ERROR = createErrorSubclass('URIError');\n};\n\n/**\n * Initialize Math object.\n * @param {!Interpreter.Object} scope Global scope.\n */\nInterpreter.prototype.initMath = function(scope) {\n  var thisInterpreter = this;\n  var myMath = this.createObjectProto(this.OBJECT_PROTO);\n  this.setProperty(scope, 'Math', myMath);\n  var mathConsts = ['E', 'LN2', 'LN10', 'LOG2E', 'LOG10E', 'PI',\n                    'SQRT1_2', 'SQRT2'];\n  for (var i = 0; i < mathConsts.length; i++) {\n    this.setProperty(myMath, mathConsts[i], Math[mathConsts[i]],\n        Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  }\n  var numFunctions = ['abs', 'acos', 'asin', 'atan', 'atan2', 'ceil', 'cos',\n                      'exp', 'floor', 'log', 'max', 'min', 'pow', 'random',\n                      'round', 'sin', 'sqrt', 'tan'];\n  for (var i = 0; i < numFunctions.length; i++) {\n    this.setProperty(myMath, numFunctions[i],\n        this.createNativeFunction(Math[numFunctions[i]], false),\n        Interpreter.NONENUMERABLE_DESCRIPTOR);\n  }\n};\n\n/**\n * Initialize JSON object.\n * @param {!Interpreter.Object} scope Global scope.\n */\nInterpreter.prototype.initJSON = function(scope) {\n  var thisInterpreter = this;\n  var myJSON = thisInterpreter.createObjectProto(this.OBJECT_PROTO);\n  this.setProperty(scope, 'JSON', myJSON);\n\n  var wrapper = function(text) {\n    try {\n      var nativeObj = JSON.parse(String(text));\n    } catch (e) {\n      thisInterpreter.throwException(thisInterpreter.SYNTAX_ERROR, e.message);\n    }\n    return thisInterpreter.nativeToPseudo(nativeObj);\n  };\n  this.setProperty(myJSON, 'parse', this.createNativeFunction(wrapper, false));\n\n  wrapper = function(value) {\n    var nativeObj = thisInterpreter.pseudoToNative(value);\n    try {\n      var str = JSON.stringify(nativeObj);\n    } catch (e) {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR, e.message);\n    }\n    return str;\n  };\n  this.setProperty(myJSON, 'stringify',\n      this.createNativeFunction(wrapper, false));\n};\n\n/**\n * Is an object of a certain class?\n * @param {Interpreter.Value} child Object to check.\n * @param {Interpreter.Object} constructor Constructor of object.\n * @return {boolean} True if object is the class or inherits from it.\n *     False otherwise.\n */\nInterpreter.prototype.isa = function(child, constructor) {\n  if (child === null || child === undefined || !constructor) {\n    return false;\n  }\n  var proto = constructor.properties['prototype'];\n  if (child === proto) {\n    return true;\n  }\n  // The first step up the prototype chain is harder since the child might be\n  // a primitive value.  Subsequent steps can just follow the .proto property.\n  child = this.getPrototype(child);\n  while (child) {\n    if (child === proto) {\n      return true;\n    }\n    child = child.proto;\n  }\n  return false;\n};\n\n/**\n * Initialize a pseudo regular expression object based on a native regular\n * expression object.\n * @param {!Interpreter.Object} pseudoRegexp The existing object to set.\n * @param {!RegExp} nativeRegexp The native regular expression.\n */\nInterpreter.prototype.populateRegExp = function(pseudoRegexp, nativeRegexp) {\n  pseudoRegexp.data = nativeRegexp;\n  // lastIndex is settable, all others are read-only attributes\n  this.setProperty(pseudoRegexp, 'lastIndex', nativeRegexp.lastIndex,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(pseudoRegexp, 'source', nativeRegexp.source,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(pseudoRegexp, 'global', nativeRegexp.global,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(pseudoRegexp, 'ignoreCase', nativeRegexp.ignoreCase,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(pseudoRegexp, 'multiline', nativeRegexp.multiline,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n};\n\n/**\n * Create a Web Worker to execute regular expressions.\n * Using a separate file fails in Chrome when run locally on a file:// URI.\n * Using a data encoded URI fails in IE and Edge.\n * Using a blob works in IE11 and all other browsers.\n * @return {!Worker} Web Worker with regexp execution code loaded.\n */\nInterpreter.prototype.createWorker = function() {\n  var blob = this.createWorker.blob_;\n  if (!blob) {\n    blob = new Blob([Interpreter.WORKER_CODE.join('\\n')],\n        {type: 'application/javascript'});\n    // Cache the blob, so it doesn't need to be created next time.\n    this.createWorker.blob_ = blob;\n  }\n  return new Worker(URL.createObjectURL(blob));\n};\n\n/**\n * Execute regular expressions in a node vm.\n * @param {string} code Code to execute.\n * @param {!Object} sandbox Global variables for new vm.\n * @param {!RegExp} nativeRegExp Regular expression.\n * @param {!Function} callback Asynchronous callback function.\n */\nInterpreter.prototype.vmCall = function(code, sandbox, nativeRegExp, callback) {\n  var options = {'timeout': this.REGEXP_THREAD_TIMEOUT};\n  try {\n    return Interpreter.vm['runInNewContext'](code, sandbox, options);\n  } catch (e) {\n    callback(null);\n    this.throwException(this.ERROR, 'RegExp Timeout: ' + nativeRegExp);\n  }\n  return Interpreter.REGEXP_TIMEOUT;\n};\n\n/**\n * If REGEXP_MODE is 0, then throw an error.\n * Also throw if REGEXP_MODE is 2 and JS doesn't support Web Workers or vm.\n * @param {!RegExp} nativeRegExp Regular expression.\n * @param {!Function} callback Asynchronous callback function.\n */\nInterpreter.prototype.maybeThrowRegExp = function(nativeRegExp, callback) {\n  var ok;\n  if (this.REGEXP_MODE === 0) {\n    // Fail: No RegExp support.\n    ok = false;\n  } else if (this.REGEXP_MODE === 1) {\n    // Ok: Native RegExp support.\n    ok = true;\n  } else {\n    // Sandboxed RegExp handling.\n    if (Interpreter.vm) {\n      // Ok: Node's vm module already loaded.\n      ok = true;\n    } else if (typeof Worker === 'function' && typeof URL === 'function') {\n      // Ok: Web Workers available.\n      ok = true;\n    } else if (typeof require === 'function') {\n      // Try to load Node's vm module.\n      try {\n        Interpreter.vm = require('vm');\n      } catch (e) {};\n      ok = !!Interpreter.vm;\n    } else {\n      // Fail: Neither Web Workers nor vm available.\n      ok = false;\n    }\n  }\n  if (!ok) {\n    callback(null);\n    this.throwException(this.ERROR, 'Regular expressions not supported: ' +\n        nativeRegExp);\n  }\n};\n\n/**\n * Set a timeout for regular expression threads.  Unless cancelled, this will\n * terminate the thread and throw an error.\n * @param {!RegExp} nativeRegExp Regular expression (used for error message).\n * @param {!Worker} worker Thread to terminate.\n * @param {!Function} callback Async callback function to continue execution.\n * @return {number} PID of timeout.  Used to cancel if thread completes.\n */\nInterpreter.prototype.regExpTimeout = function(nativeRegExp, worker, callback) {\n  var thisInterpreter = this;\n  return setTimeout(function() {\n      worker.terminate();\n      callback(null);\n      try {\n        thisInterpreter.throwException(thisInterpreter.ERROR,\n            'RegExp Timeout: ' + nativeRegExp);\n      } catch (e) {\n        // Eat the expected Interpreter.STEP_ERROR.\n      }\n  }, this.REGEXP_THREAD_TIMEOUT);\n};\n\n/**\n * Is a value a legal integer for an array length?\n * @param {Interpreter.Value} x Value to check.\n * @return {number} Zero, or a positive integer if the value can be\n *     converted to such.  NaN otherwise.\n */\nInterpreter.legalArrayLength = function(x) {\n  var n = x >>> 0;\n  // Array length must be between 0 and 2^32-1 (inclusive).\n  return (n === Number(x)) ? n : NaN;\n};\n\n/**\n * Is a value a legal integer for an array index?\n * @param {Interpreter.Value} x Value to check.\n * @return {number} Zero, or a positive integer if the value can be\n *     converted to such.  NaN otherwise.\n */\nInterpreter.legalArrayIndex = function(x) {\n  var n = x >>> 0;\n  // Array index cannot be 2^32-1, otherwise length would be 2^32.\n  // 0xffffffff is 2^32-1.\n  return (String(n) === String(x) && n !== 0xffffffff) ? n : NaN;\n};\n\n/**\n * Typedef for JS values.\n * @typedef {!Interpreter.Object|boolean|number|string|undefined|null}\n */\nInterpreter.Value;\n\n/**\n * Class for an object.\n * @param {Interpreter.Object} proto Prototype object or null.\n * @constructor\n */\nInterpreter.Object = function(proto) {\n  this.getter = Object.create(null);\n  this.setter = Object.create(null);\n  this.properties = Object.create(null);\n  this.proto = proto;\n};\n\n/** @type {Interpreter.Object} */\nInterpreter.Object.prototype.proto = null;\n\n/** @type {boolean} */\nInterpreter.Object.prototype.isObject = true;\n\n/** @type {string} */\nInterpreter.Object.prototype.class = 'Object';\n\n/** @type {Date|RegExp|boolean|number|string|undefined|null} */\nInterpreter.Object.prototype.data = null;\n\n/**\n * Convert this object into a string.\n * @return {string} String value.\n * @override\n */\nInterpreter.Object.prototype.toString = function() {\n  if (this.class === 'Array') {\n    // Array\n    var cycles = Interpreter.toStringCycles_;\n    cycles.push(this);\n    try {\n      var strs = [];\n      for (var i = 0; i < this.properties.length; i++) {\n        var value = this.properties[i];\n        strs[i] = (value && value.isObject && cycles.indexOf(value) !== -1) ?\n            '...' : value;\n      }\n    } finally {\n      cycles.pop();\n    }\n    return strs.join(',');\n  }\n  if (this.class === 'Error') {\n    var cycles = Interpreter.toStringCycles_;\n    if (cycles.indexOf(this) !== -1) {\n      return '[object Error]';\n    }\n    var name, message;\n    // Bug: Does not support getters and setters for name or message.\n    var obj = this;\n    do {\n      if ('name' in obj.properties) {\n        name = obj.properties['name'];\n        break;\n      }\n    } while ((obj = obj.proto));\n    var obj = this;\n    do {\n      if ('message' in obj.properties) {\n        message = obj.properties['message'];\n        break;\n      }\n    } while ((obj = obj.proto));\n    cycles.push(this);\n    try {\n      name = name && String(name);\n      message = message && String(message);\n    } finally {\n      cycles.pop();\n    }\n    return message ? name + ': ' + message : String(name);\n  }\n\n  // RegExp, Date, and boxed primitives.\n  if (this.data !== null) {\n    return String(this.data);\n  }\n\n  return '[object ' + this.class + ']';\n};\n\n/**\n * Return the object's value.\n * @return {Interpreter.Value} Value.\n * @override\n */\nInterpreter.Object.prototype.valueOf = function() {\n  if (this.data === undefined || this.data === null ||\n      this.data instanceof RegExp) {\n    return this; // An Object.\n  }\n  if (this.data instanceof Date) {\n    return this.data.valueOf();  // Milliseconds.\n  }\n  return /** @type {(boolean|number|string)} */ (this.data);  // Boxed primitive.\n};\n\n/**\n * Create a new data object based on a constructor's prototype.\n * @param {Interpreter.Object} constructor Parent constructor function,\n *     or null if scope object.\n * @return {!Interpreter.Object} New data object.\n */\nInterpreter.prototype.createObject = function(constructor) {\n  return this.createObjectProto(constructor &&\n                                constructor.properties['prototype']);\n};\n\n/**\n * Create a new data object based on a prototype.\n * @param {Interpreter.Object} proto Prototype object.\n * @return {!Interpreter.Object} New data object.\n */\nInterpreter.prototype.createObjectProto = function(proto) {\n  if (typeof proto !== 'object') {\n    throw Error('Non object prototype');\n  }\n  var obj = new Interpreter.Object(proto);\n  // Functions have prototype objects.\n  if (this.isa(obj, this.FUNCTION)) {\n    this.setProperty(obj, 'prototype',\n                     this.createObjectProto(this.OBJECT_PROTO || null),\n                     Interpreter.NONENUMERABLE_DESCRIPTOR);\n    obj.class = 'Function';\n  }\n  // Arrays have length.\n  if (this.isa(obj, this.ARRAY)) {\n    this.setProperty(obj, 'length', 0,\n        {configurable: false, enumerable: false, writable: true});\n    obj.class = 'Array';\n  }\n  if (this.isa(obj, this.ERROR)) {\n    obj.class = 'Error';\n  }\n  return obj;\n};\n\n/**\n * Create a new function.\n * @param {!Object} node AST node defining the function.\n * @param {!Object} scope Parent scope.\n * @return {!Interpreter.Object} New function.\n */\nInterpreter.prototype.createFunction = function(node, scope) {\n  var func = this.createObjectProto(this.FUNCTION_PROTO);\n  func.parentScope = scope;\n  func.node = node;\n  this.setProperty(func, 'length', func.node['params'].length,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  return func;\n};\n\n/**\n * Create a new native function.\n * @param {!Function} nativeFunc JavaScript function.\n * @param {boolean=} opt_constructor If true, the function's\n * prototype will have its constructor property set to the function.\n * If false, the function cannot be called as a constructor (e.g. escape).\n * Defaults to undefined.\n * @return {!Interpreter.Object} New function.\n */\nInterpreter.prototype.createNativeFunction =\n    function(nativeFunc, opt_constructor) {\n  var func = this.createObjectProto(this.FUNCTION_PROTO);\n  func.nativeFunc = nativeFunc;\n  nativeFunc.id = this.functionCounter_++;\n  this.setProperty(func, 'length', nativeFunc.length,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  if (opt_constructor) {\n    this.setProperty(func.properties['prototype'], 'constructor', func,\n                     Interpreter.NONENUMERABLE_DESCRIPTOR);\n  } else if (opt_constructor === false) {\n    func.illegalConstructor = true;\n    this.setProperty(func, 'prototype', undefined,\n                     Interpreter.NONENUMERABLE_DESCRIPTOR);\n  }\n  return func;\n};\n\n/**\n * Create a new native asynchronous function.\n * @param {!Function} asyncFunc JavaScript function.\n * @return {!Interpreter.Object} New function.\n */\nInterpreter.prototype.createAsyncFunction = function(asyncFunc) {\n  var func = this.createObjectProto(this.FUNCTION_PROTO);\n  func.asyncFunc = asyncFunc;\n  asyncFunc.id = this.functionCounter_++;\n  this.setProperty(func, 'length', asyncFunc.length,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  return func;\n};\n\n/**\n * Converts from a native JS object or value to a JS interpreter object.\n * Can handle JSON-style values, does NOT handle cycles.\n * @param {*} nativeObj The native JS object to be converted.\n * @return {Interpreter.Value} The equivalent JS interpreter object.\n */\nInterpreter.prototype.nativeToPseudo = function(nativeObj) {\n  if ((typeof nativeObj !== 'object' && typeof nativeObj !== 'function') ||\n      nativeObj === null) {\n    return nativeObj;\n  }\n\n  if (nativeObj instanceof RegExp) {\n    var pseudoRegexp = this.createObjectProto(this.REGEXP_PROTO);\n    this.populateRegExp(pseudoRegexp, nativeObj);\n    return pseudoRegexp;\n  }\n\n  if (nativeObj instanceof Date) {\n    var pseudoDate = this.createObjectProto(this.DATE_PROTO);\n    pseudoDate.data = nativeObj;\n    return pseudoDate;\n  }\n\n  if (nativeObj instanceof Function) {\n    var interpreter = this;\n    var wrapper = function() {\n      return interpreter.nativeToPseudo(\n        nativeObj.apply(interpreter,\n          Array.prototype.slice.call(arguments)\n          .map(function(i) {\n            return interpreter.pseudoToNative(i);\n          })\n        )\n      );\n    };\n    return this.createNativeFunction(wrapper, undefined);\n  }\n\n  var pseudoObj;\n  if (Array.isArray(nativeObj)) {  // Array.\n    pseudoObj = this.createObjectProto(this.ARRAY_PROTO);\n    for (var i = 0; i < nativeObj.length; i++) {\n      if (i in nativeObj) {\n        this.setProperty(pseudoObj, i, this.nativeToPseudo(nativeObj[i]));\n      }\n    }\n  } else {  // Object.\n    pseudoObj = this.createObjectProto(this.OBJECT_PROTO);\n    for (var key in nativeObj) {\n      this.setProperty(pseudoObj, key, this.nativeToPseudo(nativeObj[key]));\n    }\n  }\n  return pseudoObj;\n};\n\n/**\n * Converts from a JS interpreter object to native JS object.\n * Can handle JSON-style values, plus cycles.\n * @param {Interpreter.Value} pseudoObj The JS interpreter object to be\n * converted.\n * @param {Object=} opt_cycles Cycle detection (used in recursive calls).\n * @return {*} The equivalent native JS object or value.\n */\nInterpreter.prototype.pseudoToNative = function(pseudoObj, opt_cycles) {\n  if ((typeof pseudoObj !== 'object' && typeof pseudoObj !== 'function') ||\n      pseudoObj === null) {\n    return pseudoObj;\n  }\n\n  if (this.isa(pseudoObj, this.REGEXP)) {  // Regular expression.\n    return pseudoObj.data;\n  }\n\n  if (this.isa(pseudoObj, this.DATE)) {  // Date.\n    return pseudoObj.data;\n  }\n\n  var cycles = opt_cycles || {\n    pseudo: [],\n    native: []\n  };\n  var i = cycles.pseudo.indexOf(pseudoObj);\n  if (i !== -1) {\n    return cycles.native[i];\n  }\n  cycles.pseudo.push(pseudoObj);\n  var nativeObj;\n  if (this.isa(pseudoObj, this.ARRAY)) {  // Array.\n    nativeObj = [];\n    cycles.native.push(nativeObj);\n    var length = this.getProperty(pseudoObj, 'length');\n    for (var i = 0; i < length; i++) {\n      if (this.hasProperty(pseudoObj, i)) {\n        nativeObj[i] =\n            this.pseudoToNative(this.getProperty(pseudoObj, i), cycles);\n      }\n    }\n  } else {  // Object.\n    nativeObj = {};\n    cycles.native.push(nativeObj);\n    var val;\n    for (var key in pseudoObj.properties) {\n      val = pseudoObj.properties[key];\n      nativeObj[key] = this.pseudoToNative(val, cycles);\n    }\n  }\n  cycles.pseudo.pop();\n  cycles.native.pop();\n  return nativeObj;\n};\n\n/**\n * Converts from a native JS array to a JS interpreter array.\n * Does handle non-numeric properties (like str.match's index prop).\n * Does NOT recurse into the array's contents.\n * @param {!Array} nativeArray The JS array to be converted.\n * @return {!Interpreter.Object} The equivalent JS interpreter array.\n */\nInterpreter.prototype.arrayNativeToPseudo = function(nativeArray) {\n  var pseudoArray = this.createObjectProto(this.ARRAY_PROTO);\n  var props = Object.getOwnPropertyNames(nativeArray);\n  for (var i = 0; i < props.length; i++) {\n    this.setProperty(pseudoArray, props[i], nativeArray[props[i]]);\n  }\n  return pseudoArray;\n};\n\n/**\n * Converts from a JS interpreter array to native JS array.\n * Does handle non-numeric properties (like str.match's index prop).\n * Does NOT recurse into the array's contents.\n * @param {!Interpreter.Object} pseudoArray The JS interpreter array,\n *     or JS interpreter object pretending to be an array.\n * @return {!Array} The equivalent native JS array.\n */\nInterpreter.prototype.arrayPseudoToNative = function(pseudoArray) {\n  var nativeArray = [];\n  for (var key in pseudoArray.properties) {\n    nativeArray[key] = this.getProperty(pseudoArray, key);\n  }\n  // pseudoArray might be an object pretending to be an array.  In this case\n  // it's possible that length is non-existent, invalid, or smaller than the\n  // largest defined numeric property.  Set length explicitly here.\n  nativeArray.length = Interpreter.legalArrayLength(\n      this.getProperty(pseudoArray, 'length')) || 0;\n  return nativeArray;\n};\n\n/**\n * Look up the prototype for this value.\n * @param {Interpreter.Value} value Data object.\n * @return {Interpreter.Object} Prototype object, null if none.\n */\nInterpreter.prototype.getPrototype = function(value) {\n  switch (typeof value) {\n    case 'number':\n      return this.NUMBER.properties['prototype'];\n    case 'boolean':\n      return this.BOOLEAN.properties['prototype'];\n    case 'string':\n      return this.STRING.properties['prototype'];\n  }\n  if (value) {\n    return value.proto;\n  }\n  return null;\n};\n\n/**\n * Fetch a property value from a data object.\n * @param {Interpreter.Value} obj Data object.\n * @param {Interpreter.Value} name Name of property.\n * @return {Interpreter.Value} Property value (may be undefined).\n */\nInterpreter.prototype.getProperty = function(obj, name) {\n  name = String(name);\n  if (obj === undefined || obj === null) {\n    this.throwException(this.TYPE_ERROR,\n                        \"Cannot read property '\" + name + \"' of \" + obj);\n  }\n  if (name === 'length') {\n    // Special cases for magic length property.\n    if (this.isa(obj, this.STRING)) {\n      return String(obj).length;\n    }\n  } else if (name.charCodeAt(0) < 0x40) {\n    // Might have numbers in there?\n    // Special cases for string array indexing\n    if (this.isa(obj, this.STRING)) {\n      var n = Interpreter.legalArrayIndex(name);\n      if (!isNaN(n) && n < String(obj).length) {\n        return String(obj)[n];\n      }\n    }\n  }\n  do {\n    if (obj.properties && name in obj.properties) {\n      var getter = obj.getter[name];\n      if (getter) {\n        // Flag this function as being a getter and thus needing immediate\n        // execution (rather than being the value of the property).\n        getter.isGetter = true;\n        return getter;\n      }\n      return obj.properties[name];\n    }\n  } while ((obj = this.getPrototype(obj)));\n  return undefined;\n};\n\n/**\n * Does the named property exist on a data object.\n * @param {Interpreter.Value} obj Data object.\n * @param {Interpreter.Value} name Name of property.\n * @return {boolean} True if property exists.\n */\nInterpreter.prototype.hasProperty = function(obj, name) {\n  if (!obj.isObject) {\n    throw TypeError('Primitive data type has no properties');\n  }\n  name = String(name);\n  if (name === 'length' && this.isa(obj, this.STRING)) {\n    return true;\n  }\n  if (this.isa(obj, this.STRING)) {\n    var n = Interpreter.legalArrayIndex(name);\n    if (!isNaN(n) && n < String(obj).length) {\n      return true;\n    }\n  }\n  do {\n    if (obj.properties && name in obj.properties) {\n      return true;\n    }\n  } while ((obj = this.getPrototype(obj)));\n  return false;\n};\n\n/**\n * Set a property value on a data object.\n * @param {!Interpreter.Object} obj Data object.\n * @param {Interpreter.Value} name Name of property.\n * @param {Interpreter.Value} value New property value.\n *     Use Interpreter.VALUE_IN_DESCRIPTOR if value is handled by\n *     descriptor instead.\n * @param {Object=} opt_descriptor Optional descriptor object.\n * @return {!Interpreter.Object|undefined} Returns a setter function if one\n *     needs to be called, otherwise undefined.\n */\nInterpreter.prototype.setProperty = function(obj, name, value, opt_descriptor) {\n  name = String(name);\n  if (obj === undefined || obj === null) {\n    this.throwException(this.TYPE_ERROR,\n                        \"Cannot set property '\" + name + \"' of \" + obj);\n  }\n  if (opt_descriptor && ('get' in opt_descriptor || 'set' in opt_descriptor) &&\n      ('value' in opt_descriptor || 'writable' in opt_descriptor)) {\n    this.throwException(this.TYPE_ERROR, 'Invalid property descriptor. ' +\n        'Cannot both specify accessors and a value or writable attribute');\n  }\n  var strict = !this.stateStack || this.getScope().strict;\n  if (!obj.isObject) {\n    if (strict) {\n      this.throwException(this.TYPE_ERROR, \"Can't create property '\" + name +\n                          \"' on '\" + obj + \"'\");\n    }\n    return;\n  }\n  if (this.isa(obj, this.STRING)) {\n    var n = Interpreter.legalArrayIndex(name);\n    if (name === 'length' || (!isNaN(n) && n < String(obj).length)) {\n      // Can't set length or letters on String objects.\n      if (strict) {\n        this.throwException(this.TYPE_ERROR, \"Cannot assign to read only \" +\n            \"property '\" + name + \"' of String '\" + obj.data + \"'\");\n      }\n      return;\n    }\n  }\n  if (obj.class === 'Array') {\n    // Arrays have a magic length variable that is bound to the elements.\n    var length = obj.properties.length;\n    var i;\n    if (name === 'length') {\n      // Delete elements if length is smaller.\n      if (opt_descriptor) {\n        if (!('value' in opt_descriptor)) {\n          return;\n        }\n        value = opt_descriptor.value;\n      }\n      value = Interpreter.legalArrayLength(value);\n      if (isNaN(value)) {\n        this.throwException(this.RANGE_ERROR, 'Invalid array length');\n      }\n      if (value < length) {\n        for (i in obj.properties) {\n          i = Interpreter.legalArrayIndex(i);\n          if (!isNaN(i) && value <= i) {\n            delete obj.properties[i];\n          }\n        }\n      }\n    } else if (!isNaN(i = Interpreter.legalArrayIndex(name))) {\n      // Increase length if this index is larger.\n      obj.properties.length = Math.max(length, i + 1);\n    }\n  }\n  if (obj.preventExtensions && !(name in obj.properties)) {\n    if (strict) {\n      this.throwException(this.TYPE_ERROR, \"Can't add property '\" + name +\n                          \"', object is not extensible\");\n    }\n    return;\n  }\n  if (opt_descriptor) {\n    // Define the property.\n    if ('get' in opt_descriptor) {\n      if (opt_descriptor.get) {\n        obj.getter[name] = opt_descriptor.get;\n      } else {\n        delete obj.getter[name];\n      }\n    }\n    if ('set' in opt_descriptor) {\n      if (opt_descriptor.set) {\n        obj.setter[name] = opt_descriptor.set;\n      } else {\n        delete obj.setter[name];\n      }\n    }\n    var descriptor = {};\n    if ('configurable' in opt_descriptor) {\n      descriptor.configurable = opt_descriptor.configurable;\n    }\n    if ('enumerable' in opt_descriptor) {\n      descriptor.enumerable = opt_descriptor.enumerable;\n    }\n    if ('writable' in opt_descriptor) {\n      descriptor.writable = opt_descriptor.writable;\n      delete obj.getter[name];\n      delete obj.setter[name];\n    }\n    if ('value' in opt_descriptor) {\n      descriptor.value = opt_descriptor.value;\n      delete obj.getter[name];\n      delete obj.setter[name];\n    } else if (value !== Interpreter.VALUE_IN_DESCRIPTOR) {\n      descriptor.value = value;\n      delete obj.getter[name];\n      delete obj.setter[name];\n    }\n    try {\n      Object.defineProperty(obj.properties, name, descriptor);\n    } catch (e) {\n      this.throwException(this.TYPE_ERROR, 'Cannot redefine property: ' + name);\n    }\n  } else {\n    // Set the property.\n    if (value === Interpreter.VALUE_IN_DESCRIPTOR) {\n      throw ReferenceError('Value not specified.');\n    }\n    // Determine the parent (possibly self) where the property is defined.\n    var defObj = obj;\n    while (!(name in defObj.properties)) {\n      defObj = this.getPrototype(defObj);\n      if (!defObj) {\n        // This is a new property.\n        defObj = obj;\n        break;\n      }\n    }\n    if (defObj.setter && defObj.setter[name]) {\n      return defObj.setter[name];\n    }\n    if (defObj.getter && defObj.getter[name]) {\n      if (strict) {\n        this.throwException(this.TYPE_ERROR, \"Cannot set property '\" + name +\n            \"' of object '\" + obj + \"' which only has a getter\");\n      }\n    } else {\n      // No setter, simple assignment.\n      try {\n        obj.properties[name] = value;\n      } catch (e) {\n        if (strict) {\n          this.throwException(this.TYPE_ERROR, \"Cannot assign to read only \" +\n              \"property '\" + name + \"' of object '\" + obj + \"'\");\n        }\n      }\n    }\n  }\n};\n\n/**\n * Convenience method for adding a native function as a non-enumerable property\n * onto an object's prototype.\n * @param {!Interpreter.Object} obj Data object.\n * @param {Interpreter.Value} name Name of property.\n * @param {!Function} wrapper Function object.\n */\nInterpreter.prototype.setNativeFunctionPrototype =\n    function(obj, name, wrapper) {\n  this.setProperty(obj.properties['prototype'], name,\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n};\n\n/**\n * Convenience method for adding an async function as a non-enumerable property\n * onto an object's prototype.\n * @param {!Interpreter.Object} obj Data object.\n * @param {Interpreter.Value} name Name of property.\n * @param {!Function} wrapper Function object.\n */\nInterpreter.prototype.setAsyncFunctionPrototype =\n    function(obj, name, wrapper) {\n  this.setProperty(obj.properties['prototype'], name,\n      this.createAsyncFunction(wrapper),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n};\n\n/**\n * Returns the current scope from the stateStack.\n * @return {!Interpreter.Object} Current scope dictionary.\n */\nInterpreter.prototype.getScope = function() {\n  var scope = this.stateStack[this.stateStack.length - 1].scope;\n  if (!scope) {\n    throw Error('No scope found.');\n  }\n  return scope;\n};\n\n/**\n * Create a new scope dictionary.\n * @param {!Object} node AST node defining the scope container\n *     (e.g. a function).\n * @param {Interpreter.Object} parentScope Scope to link to.\n * @return {!Interpreter.Object} New scope.\n */\nInterpreter.prototype.createScope = function(node, parentScope) {\n  var scope = this.createObjectProto(null);\n  scope.parentScope = parentScope;\n  if (!parentScope) {\n    this.initGlobalScope(scope);\n  }\n  this.populateScope_(node, scope);\n\n  // Determine if this scope starts with 'use strict'.\n  scope.strict = false;\n  if (parentScope && parentScope.strict) {\n    scope.strict = true;\n  } else {\n    var firstNode = node['body'] && node['body'][0];\n    if (firstNode && firstNode.expression &&\n        firstNode.expression['type'] === 'Literal' &&\n        firstNode.expression.value === 'use strict') {\n      scope.strict = true;\n    }\n  }\n  return scope;\n};\n\n/**\n * Create a new special scope dictionary. Similar to createScope(), but\n * doesn't assume that the scope is for a function body.\n * This is used for 'catch' clauses and 'with' statements.\n * @param {!Interpreter.Object} parentScope Scope to link to.\n * @param {Interpreter.Object=} opt_scope Optional object to transform into\n *     scope.\n * @return {!Interpreter.Object} New scope.\n */\nInterpreter.prototype.createSpecialScope = function(parentScope, opt_scope) {\n  if (!parentScope) {\n    throw Error('parentScope required');\n  }\n  var scope = opt_scope || this.createObjectProto(null);\n  scope.parentScope = parentScope;\n  scope.strict = parentScope.strict;\n  return scope;\n};\n\n/**\n * Retrieves a value from the scope chain.\n * @param {string} name Name of variable.\n * @return {Interpreter.Value} Any value.\n *   May be flagged as being a getter and thus needing immediate execution\n *   (rather than being the value of the property).\n */\nInterpreter.prototype.getValueFromScope = function(name) {\n  var scope = this.getScope();\n  while (scope && scope !== this.global) {\n    if (name in scope.properties) {\n      return scope.properties[name];\n    }\n    scope = scope.parentScope;\n  }\n  // The root scope is also an object which has inherited properties and\n  // could also have getters.\n  if (scope === this.global && this.hasProperty(scope, name)) {\n    return this.getProperty(scope, name);\n  }\n  // Typeof operator is unique: it can safely look at non-defined variables.\n  var prevNode = this.stateStack[this.stateStack.length - 1].node;\n  if (prevNode['type'] === 'UnaryExpression' &&\n      prevNode['operator'] === 'typeof') {\n    return undefined;\n  }\n  this.throwException(this.REFERENCE_ERROR, name + ' is not defined');\n};\n\n/**\n * Sets a value to the current scope.\n * @param {string} name Name of variable.\n * @param {Interpreter.Value} value Value.\n * @return {!Interpreter.Object|undefined} Returns a setter function if one\n *     needs to be called, otherwise undefined.\n */\nInterpreter.prototype.setValueToScope = function(name, value) {\n  var scope = this.getScope();\n  var strict = scope.strict;\n  while (scope && scope !== this.global) {\n    if (name in scope.properties) {\n      scope.properties[name] = value;\n      return undefined;\n    }\n    scope = scope.parentScope;\n  }\n  // The root scope is also an object which has readonly properties and\n  // could also have setters.\n  if (scope === this.global && (!strict || this.hasProperty(scope, name))) {\n    return this.setProperty(scope, name, value);\n  }\n  this.throwException(this.REFERENCE_ERROR, name + ' is not defined');\n};\n\n/**\n * Create a new scope for the given node.\n * @param {!Object} node AST node (program or function).\n * @param {!Interpreter.Object} scope Scope dictionary to populate.\n * @private\n */\nInterpreter.prototype.populateScope_ = function(node, scope) {\n  if (node['type'] === 'VariableDeclaration') {\n    for (var i = 0; i < node['declarations'].length; i++) {\n      this.setProperty(scope, node['declarations'][i]['id']['name'],\n          undefined, Interpreter.VARIABLE_DESCRIPTOR);\n    }\n  } else if (node['type'] === 'FunctionDeclaration') {\n    this.setProperty(scope, node['id']['name'],\n        this.createFunction(node, scope), Interpreter.VARIABLE_DESCRIPTOR);\n    return;  // Do not recurse into function.\n  } else if (node['type'] === 'FunctionExpression') {\n    return;  // Do not recurse into function.\n  } else if (node['type'] === 'ExpressionStatement') {\n    return;  // Expressions can't contain variable/function declarations.\n  }\n  var nodeClass = node['constructor'];\n  for (var name in node) {\n    var prop = node[name];\n    if (prop && typeof prop === 'object') {\n      if (Array.isArray(prop)) {\n        for (var i = 0; i < prop.length; i++) {\n          if (prop[i] && prop[i].constructor === nodeClass) {\n            this.populateScope_(prop[i], scope);\n          }\n        }\n      } else {\n        if (prop.constructor === nodeClass) {\n          this.populateScope_(prop, scope);\n        }\n      }\n    }\n  }\n};\n\n/**\n * Remove start and end values from AST, or set start and end values to a\n * constant value.  Used to remove highlighting from polyfills and to set\n * highlighting in an eval to cover the entire eval expression.\n * @param {!Object} node AST node.\n * @param {number=} start Starting character of all nodes, or undefined.\n * @param {number=} end Ending character of all nodes, or undefined.\n * @private\n */\nInterpreter.prototype.stripLocations_ = function(node, start, end) {\n  if (start) {\n    node['start'] = start;\n  } else {\n    delete node['start'];\n  }\n  if (end) {\n    node['end'] = end;\n  } else {\n    delete node['end'];\n  }\n  for (var name in node) {\n    if (node.hasOwnProperty(name)) {\n      var prop = node[name];\n      if (prop && typeof prop === 'object') {\n        this.stripLocations_(prop, start, end);\n      }\n    }\n  }\n};\n\n/**\n * Is the current state directly being called with as a construction with 'new'.\n * @return {boolean} True if 'new foo()', false if 'foo()'.\n */\nInterpreter.prototype.calledWithNew = function() {\n  return this.stateStack[this.stateStack.length - 1].isConstructor;\n};\n\n/**\n * Gets a value from the scope chain or from an object property.\n * @param {!Array} ref Name of variable or object/propname tuple.\n * @return {Interpreter.Value} Any value.\n *   May be flagged as being a getter and thus needing immediate execution\n *   (rather than being the value of the property).\n */\nInterpreter.prototype.getValue = function(ref) {\n  if (ref[0] === Interpreter.SCOPE_REFERENCE) {\n    // A null/varname variable lookup.\n    return this.getValueFromScope(ref[1]);\n  } else {\n    // An obj/prop components tuple (foo.bar).\n    return this.getProperty(ref[0], ref[1]);\n  }\n};\n\n/**\n * Sets a value to the scope chain or to an object property.\n * @param {!Array} ref Name of variable or object/propname tuple.\n * @param {Interpreter.Value} value Value.\n * @return {!Interpreter.Object|undefined} Returns a setter function if one\n *     needs to be called, otherwise undefined.\n */\nInterpreter.prototype.setValue = function(ref, value) {\n  if (ref[0] === Interpreter.SCOPE_REFERENCE) {\n    // A null/varname variable lookup.\n    return this.setValueToScope(ref[1], value);\n  } else {\n    // An obj/prop components tuple (foo.bar).\n    return this.setProperty(ref[0], ref[1], value);\n  }\n};\n\n/**\n  * Completion Value Types.\n  * @enum {number}\n  */\n Interpreter.Completion = {\n   NORMAL: 0,\n   BREAK: 1,\n   CONTINUE: 2,\n   RETURN: 3,\n   THROW: 4\n };\n\n/**\n * Throw an exception in the interpreter that can be handled by an\n * interpreter try/catch statement.  If unhandled, a real exception will\n * be thrown.  Can be called with either an error class and a message, or\n * with an actual object to be thrown.\n * @param {!Interpreter.Object} errorClass Type of error (if message is\n *   provided) or the value to throw (if no message).\n * @param {string=} opt_message Message being thrown.\n */\nInterpreter.prototype.throwException = function(errorClass, opt_message) {\n  if (opt_message === undefined) {\n    var error = errorClass;  // This is a value to throw, not an error class.\n  } else {\n    var error = this.createObject(errorClass);\n    this.setProperty(error, 'message', opt_message,\n        Interpreter.NONENUMERABLE_DESCRIPTOR);\n  }\n  this.unwind(Interpreter.Completion.THROW, error, undefined);\n  // Abort anything related to the current step.\n  throw Interpreter.STEP_ERROR;\n};\n\n/**\n * Unwind the stack to the innermost relevant enclosing TryStatement,\n * For/ForIn/WhileStatement or Call/NewExpression.  If this results in\n * the stack being completely unwound the thread will be terminated\n * and the appropriate error being thrown.\n * @param {Interpreter.Completion} type Completion type.\n * @param {Interpreter.Value} value Value computed, returned or thrown.\n * @param {string|undefined} label Target label for break or return.\n */\nInterpreter.prototype.unwind = function(type, value, label) {\n  if (type === Interpreter.Completion.NORMAL) {\n    throw TypeError('Should not unwind for NORMAL completions');\n  }\n\n  for (var stack = this.stateStack; stack.length > 0; stack.pop()) {\n    var state = stack[stack.length - 1];\n    switch (state.node['type']) {\n      case 'TryStatement':\n        state.cv = {type: type, value: value, label: label};\n        return;\n      case 'CallExpression':\n      case 'NewExpression':\n        if (type === Interpreter.Completion.RETURN) {\n          state.value = value;\n          return;\n        } else if (type !== Interpreter.Completion.THROW) {\n          throw Error('Unsynatctic break/continue not rejected by Acorn');\n        }\n    }\n    if (type === Interpreter.Completion.BREAK) {\n      if (label ? (state.labels && state.labels.indexOf(label) !== -1) :\n          (state.isLoop || state.isSwitch)) {\n        stack.pop();\n        return;\n      }\n    } else if (type === Interpreter.Completion.CONTINUE) {\n      if (label ? (state.labels && state.labels.indexOf(label) !== -1) :\n          state.isLoop) {\n        return;\n      }\n    }\n  }\n\n  // Unhandled completion.  Throw a real error.\n  var realError;\n  if (this.isa(value, this.ERROR)) {\n    var errorTable = {\n      'EvalError': EvalError,\n      'RangeError': RangeError,\n      'ReferenceError': ReferenceError,\n      'SyntaxError': SyntaxError,\n      'TypeError': TypeError,\n      'URIError': URIError\n    };\n    var name = String(this.getProperty(value, 'name'));\n    var message = this.getProperty(value, 'message').valueOf();\n    var errorConstructor = errorTable[name] || Error;\n    realError = errorConstructor(message);\n  } else {\n    realError = String(value);\n  }\n  throw realError;\n};\n\n/**\n * Create a call to a getter function.\n * @param {!Interpreter.Object} func Function to execute.\n * @param {!Interpreter.Object|!Array} left\n *     Name of variable or object/propname tuple.\n * @private\n */\nInterpreter.prototype.createGetter_ = function(func, left) {\n  // Normally 'this' will be specified as the object component (o.x).\n  // Sometimes 'this' is explicitly provided (o).\n  var funcThis = Array.isArray(left) ? left[0] : left;\n  var node = new this.nodeConstructor({options:{}});\n  node['type'] = 'CallExpression';\n  var state = new Interpreter.State(node,\n      this.stateStack[this.stateStack.length - 1].scope);\n  state.doneCallee_ = true;\n  state.funcThis_ = funcThis;\n  state.func_ = func;\n  state.doneArgs_ = true;\n  state.arguments_ = [];\n  return state;\n};\n\n/**\n * Create a call to a setter function.\n * @param {!Interpreter.Object} func Function to execute.\n * @param {!Interpreter.Object|!Array} left\n *     Name of variable or object/propname tuple.\n * @param {Interpreter.Value} value Value to set.\n * @private\n */\nInterpreter.prototype.createSetter_ = function(func, left, value) {\n  // Normally 'this' will be specified as the object component (o.x).\n  // Sometimes 'this' is implicitly the global object (x).\n  var funcThis = Array.isArray(left) ? left[0] : this.global;\n  var node = new this.nodeConstructor({options:{}});\n  node['type'] = 'CallExpression';\n  var state = new Interpreter.State(node,\n      this.stateStack[this.stateStack.length - 1].scope);\n  state.doneCallee_ = true;\n  state.funcThis_ = funcThis;\n  state.func_ = func;\n  state.doneArgs_ = true;\n  state.arguments_ = [value];\n  return state;\n};\n\n/**\n * Class for a state.\n * @param {!Object} node AST node for the state.\n * @param {!Interpreter.Object} scope Scope object for the state.\n * @constructor\n */\nInterpreter.State = function(node, scope) {\n  this.node = node;\n  this.scope = scope;\n};\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Functions to handle each node type.\n///////////////////////////////////////////////////////////////////////////////\n\nInterpreter.prototype['stepArrayExpression'] = function(stack, state, node) {\n  var elements = node['elements'];\n  var n = state.n_ || 0;\n  if (!state.array_) {\n    state.array_ = this.createObjectProto(this.ARRAY_PROTO);\n    state.array_.properties.length = elements.length;\n  } else {\n    this.setProperty(state.array_, n, state.value);\n    n++;\n  }\n  while (n < elements.length) {\n    // Skip missing elements - they're not defined, not undefined.\n    if (elements[n]) {\n      state.n_ = n;\n      return new Interpreter.State(elements[n], state.scope);\n    }\n    n++;\n  }\n  stack.pop();\n  stack[stack.length - 1].value = state.array_;\n};\n\nInterpreter.prototype['stepAssignmentExpression'] =\n    function(stack, state, node) {\n  if (!state.doneLeft_) {\n    state.doneLeft_ = true;\n    var nextState = new Interpreter.State(node['left'], state.scope);\n    nextState.components = true;\n    return nextState;\n  }\n  if (!state.doneRight_) {\n    if (!state.leftReference_) {\n      state.leftReference_ = state.value;\n    }\n    if (state.doneGetter_) {\n      state.leftValue_ = state.value;\n    }\n    if (!state.doneGetter_ && node['operator'] !== '=') {\n      var leftValue = this.getValue(state.leftReference_);\n      state.leftValue_ = leftValue;\n      if (leftValue && typeof leftValue === 'object' && leftValue.isGetter) {\n        // Clear the getter flag and call the getter function.\n        leftValue.isGetter = false;\n        state.doneGetter_ = true;\n        var func = /** @type {!Interpreter.Object} */ (leftValue);\n        return this.createGetter_(func, state.leftReference_);\n      }\n    }\n    state.doneRight_ = true;\n    return new Interpreter.State(node['right'], state.scope);\n  }\n  if (state.doneSetter_) {\n    // Return if setter function.\n    // Setter method on property has completed.\n    // Ignore its return value, and use the original set value instead.\n    stack.pop();\n    stack[stack.length - 1].value = state.setterValue_;\n    return;\n  }\n  var value = state.leftValue_;\n  var rightValue = state.value;\n  switch (node['operator']) {\n    case '=':    value =    rightValue; break;\n    case '+=':   value +=   rightValue; break;\n    case '-=':   value -=   rightValue; break;\n    case '*=':   value *=   rightValue; break;\n    case '/=':   value /=   rightValue; break;\n    case '%=':   value %=   rightValue; break;\n    case '<<=':  value <<=  rightValue; break;\n    case '>>=':  value >>=  rightValue; break;\n    case '>>>=': value >>>= rightValue; break;\n    case '&=':   value &=   rightValue; break;\n    case '^=':   value ^=   rightValue; break;\n    case '|=':   value |=   rightValue; break;\n    default:\n      throw SyntaxError('Unknown assignment expression: ' + node['operator']);\n  }\n  var setter = this.setValue(state.leftReference_, value);\n  if (setter) {\n    state.doneSetter_ = true;\n    state.setterValue_ = value;\n    return this.createSetter_(setter, state.leftReference_, value);\n  }\n  // Return if no setter function.\n  stack.pop();\n  stack[stack.length - 1].value = value;\n};\n\nInterpreter.prototype['stepBinaryExpression'] = function(stack, state, node) {\n  if (!state.doneLeft_) {\n    state.doneLeft_ = true;\n    return new Interpreter.State(node['left'], state.scope);\n  }\n  if (!state.doneRight_) {\n    state.doneRight_ = true;\n    state.leftValue_ = state.value;\n    return new Interpreter.State(node['right'], state.scope);\n  }\n  stack.pop();\n  var leftValue = state.leftValue_;\n  var rightValue = state.value;\n  var value;\n  switch (node['operator']) {\n    case '==':  value = leftValue ==  rightValue; break;\n    case '!=':  value = leftValue !=  rightValue; break;\n    case '===': value = leftValue === rightValue; break;\n    case '!==': value = leftValue !== rightValue; break;\n    case '>':   value = leftValue >   rightValue; break;\n    case '>=':  value = leftValue >=  rightValue; break;\n    case '<':   value = leftValue <   rightValue; break;\n    case '<=':  value = leftValue <=  rightValue; break;\n    case '+':   value = leftValue +   rightValue; break;\n    case '-':   value = leftValue -   rightValue; break;\n    case '*':   value = leftValue *   rightValue; break;\n    case '/':   value = leftValue /   rightValue; break;\n    case '%':   value = leftValue %   rightValue; break;\n    case '&':   value = leftValue &   rightValue; break;\n    case '|':   value = leftValue |   rightValue; break;\n    case '^':   value = leftValue ^   rightValue; break;\n    case '<<':  value = leftValue <<  rightValue; break;\n    case '>>':  value = leftValue >>  rightValue; break;\n    case '>>>': value = leftValue >>> rightValue; break;\n    case 'in':\n      if (!rightValue || !rightValue.isObject) {\n        this.throwException(this.TYPE_ERROR,\n            \"'in' expects an object, not '\" + rightValue + \"'\");\n      }\n      value = this.hasProperty(rightValue, leftValue);\n      break;\n    case 'instanceof':\n      if (!this.isa(rightValue, this.FUNCTION)) {\n        this.throwException(this.TYPE_ERROR,\n            'Right-hand side of instanceof is not an object');\n      }\n      value = leftValue.isObject ? this.isa(leftValue, rightValue) : false;\n      break;\n    default:\n      throw SyntaxError('Unknown binary operator: ' + node['operator']);\n  }\n  stack[stack.length - 1].value = value;\n};\n\nInterpreter.prototype['stepBlockStatement'] = function(stack, state, node) {\n  var n = state.n_ || 0;\n  var expression = node['body'][n];\n  if (expression) {\n    state.n_ = n + 1;\n    return new Interpreter.State(expression, state.scope);\n  }\n  stack.pop();\n};\n\nInterpreter.prototype['stepBreakStatement'] = function(stack, state, node) {\n  var label = node['label'] && node['label']['name'];\n  this.unwind(Interpreter.Completion.BREAK, undefined, label);\n};\n\nInterpreter.prototype['stepCallExpression'] = function(stack, state, node) {\n  if (!state.doneCallee_) {\n    state.doneCallee_ = 1;\n    // Components needed to determine value of 'this'.\n    var nextState = new Interpreter.State(node['callee'], state.scope);\n    nextState.components = true;\n    return nextState;\n  }\n  if (state.doneCallee_ === 1) {\n    // Determine value of the function.\n    state.doneCallee_ = 2;\n    var func = state.value;\n    if (Array.isArray(func)) {\n      state.func_ = this.getValue(func);\n      if (func[0] === Interpreter.SCOPE_REFERENCE) {\n        // (Globally or locally) named function.  Is it named 'eval'?\n        state.directEval_ = (func[1] === 'eval');\n      } else {\n        // Method function, 'this' is object (ignored if invoked as 'new').\n        state.funcThis_ = func[0];\n      }\n      func = state.func_;\n      if (func && typeof func === 'object' && func.isGetter) {\n        // Clear the getter flag and call the getter function.\n        func.isGetter = false;\n        state.doneCallee_ = 1;\n        return this.createGetter_(/** @type {!Interpreter.Object} */ (func),\n                         state.value);\n      }\n    } else {\n      // Already evaluated function: (function(){...})();\n      state.func_ = func;\n    }\n    state.arguments_ = [];\n    state.n_ = 0;\n  }\n  var func = state.func_;\n  if (!state.doneArgs_) {\n    if (state.n_ !== 0) {\n      state.arguments_.push(state.value);\n    }\n    if (node['arguments'][state.n_]) {\n      return new Interpreter.State(node['arguments'][state.n_++], state.scope);\n    }\n    // Determine value of 'this' in function.\n    if (node['type'] === 'NewExpression') {\n      if (func.illegalConstructor) {\n        // Illegal: new escape();\n        this.throwException(this.TYPE_ERROR, func + ' is not a constructor');\n      }\n      // Constructor, 'this' is new object.\n      var proto = func.properties['prototype'];\n      if (typeof proto !== 'object' || proto === null) {\n        // Non-object prototypes default to Object.prototype.\n        proto = this.OBJECT_PROTO;\n      }\n      state.funcThis_ = this.createObjectProto(proto);\n      state.isConstructor = true;\n    } else if (state.funcThis_ === undefined) {\n      // Global function, 'this' is global object (or 'undefined' if strict).\n      state.funcThis_ = state.scope.strict ? undefined : this.global;\n    }\n    state.doneArgs_ = true;\n  }\n  if (!state.doneExec_) {\n    state.doneExec_ = true;\n    if (!func || !func.isObject) {\n      this.throwException(this.TYPE_ERROR, func + ' is not a function');\n    }\n    var funcNode = func.node;\n    if (funcNode) {\n      var scope = this.createScope(funcNode['body'], func.parentScope);\n      // Add all arguments.\n      for (var i = 0; i < funcNode['params'].length; i++) {\n        var paramName = funcNode['params'][i]['name'];\n        var paramValue = state.arguments_.length > i ? state.arguments_[i] :\n            undefined;\n        this.setProperty(scope, paramName, paramValue);\n      }\n      // Build arguments variable.\n      var argsList = this.createObjectProto(this.ARRAY_PROTO);\n      for (var i = 0; i < state.arguments_.length; i++) {\n        this.setProperty(argsList, i, state.arguments_[i]);\n      }\n      this.setProperty(scope, 'arguments', argsList);\n      // Add the function's name (var x = function foo(){};)\n      var name = funcNode['id'] && funcNode['id']['name'];\n      if (name) {\n        this.setProperty(scope, name, func);\n      }\n      this.setProperty(scope, 'this', state.funcThis_,\n                       Interpreter.READONLY_DESCRIPTOR);\n      state.value = undefined;  // Default value if no explicit return.\n      return new Interpreter.State(funcNode['body'], scope);\n    } else if (func.eval) {\n      var code = state.arguments_[0];\n      if (typeof code !== 'string') {\n        // JS does not parse String objects:\n        // eval(new String('1 + 1')) -> '1 + 1'\n        state.value = code;\n      } else {\n        try {\n          var ast = acorn.parse(String(code), Interpreter.PARSE_OPTIONS);\n        } catch (e) {\n          // Acorn threw a SyntaxError.  Rethrow as a trappable error.\n          this.throwException(this.SYNTAX_ERROR, 'Invalid code: ' + e.message);\n        }\n        var evalNode = new this.nodeConstructor({options:{}});\n        evalNode['type'] = 'EvalProgram_';\n        evalNode['body'] = ast['body'];\n        this.stripLocations_(evalNode, node['start'], node['end']);\n        // Create new scope and update it with definitions in eval().\n        var scope = state.directEval_ ? state.scope : this.global;\n        if (scope.strict) {\n          // Strict mode get its own scope in eval.\n          scope = this.createScope(ast, scope);\n        } else {\n          // Non-strict mode pollutes the current scope.\n          this.populateScope_(ast, scope);\n        }\n        this.value = undefined;  // Default value if no code.\n        return new Interpreter.State(evalNode, scope);\n      }\n    } else if (func.nativeFunc) {\n      state.value = func.nativeFunc.apply(state.funcThis_, state.arguments_);\n    } else if (func.asyncFunc) {\n      var thisInterpreter = this;\n      var callback = function(value) {\n        state.value = value;\n        thisInterpreter.paused_ = false;\n      };\n      // Force the argument lengths to match, then append the callback.\n      var argLength = func.asyncFunc.length - 1;\n      var argsWithCallback = state.arguments_.concat(\n          new Array(argLength)).slice(0, argLength);\n      argsWithCallback.push(callback);\n      this.paused_ = true;\n      func.asyncFunc.apply(state.funcThis_, argsWithCallback);\n      return;\n    } else {\n      /* A child of a function is a function but is not callable.  For example:\n      var F = function() {};\n      F.prototype = escape;\n      var f = new F();\n      f();\n      */\n      this.throwException(this.TYPE_ERROR, func.class + ' is not a function');\n    }\n  } else {\n    // Execution complete.  Put the return value on the stack.\n    stack.pop();\n    if (state.isConstructor && typeof state.value !== 'object') {\n      stack[stack.length - 1].value = state.funcThis_;\n    } else {\n      stack[stack.length - 1].value = state.value;\n    }\n  }\n};\n\nInterpreter.prototype['stepCatchClause'] = function(stack, state, node) {\n  if (!state.done_) {\n    state.done_ = true;\n    // Create an empty scope.\n    var scope = this.createSpecialScope(state.scope);\n    // Add the argument.\n    this.setProperty(scope, node['param']['name'], state.throwValue);\n    // Execute catch clause.\n    return new Interpreter.State(node['body'], scope);\n  } else {\n    stack.pop();\n  }\n};\n\nInterpreter.prototype['stepConditionalExpression'] =\n    function(stack, state, node) {\n  var mode = state.mode_ || 0;\n  if (mode === 0) {\n    state.mode_ = 1;\n    return new Interpreter.State(node['test'], state.scope);\n  }\n  if (mode === 1) {\n    state.mode_ = 2;\n    var value = Boolean(state.value);\n    if (value && node['consequent']) {\n      // Execute 'if' block.\n      return new Interpreter.State(node['consequent'], state.scope);\n    } else if (!value && node['alternate']) {\n      // Execute 'else' block.\n      return new Interpreter.State(node['alternate'], state.scope);\n    }\n    // eval('1;if(false){2}') -> undefined\n    this.value = undefined;\n  }\n  stack.pop();\n  if (node['type'] === 'ConditionalExpression') {\n    stack[stack.length - 1].value = state.value;\n  }\n};\n\nInterpreter.prototype['stepContinueStatement'] = function(stack, state, node) {\n  var label = node['label'] && node['label']['name'];\n  this.unwind(Interpreter.Completion.CONTINUE, undefined, label);\n};\n\nInterpreter.prototype['stepDebuggerStatement'] = function(stack, state, node) {\n  // Do nothing.  May be overridden by developers.\n  stack.pop();\n};\n\nInterpreter.prototype['stepDoWhileStatement'] = function(stack, state, node) {\n  if (node['type'] === 'DoWhileStatement' && state.test_ === undefined) {\n    // First iteration of do/while executes without checking test.\n    state.value = true;\n    state.test_ = true;\n  }\n  if (!state.test_) {\n    state.test_ = true;\n    return new Interpreter.State(node['test'], state.scope);\n  }\n  if (!state.value) {  // Done, exit loop.\n    stack.pop();\n  } else if (node['body']) {  // Execute the body.\n    state.test_ = false;\n    state.isLoop = true;\n    return new Interpreter.State(node['body'], state.scope);\n  }\n};\n\nInterpreter.prototype['stepEmptyStatement'] = function(stack, state, node) {\n  stack.pop();\n};\n\nInterpreter.prototype['stepEvalProgram_'] = function(stack, state, node) {\n  var n = state.n_ || 0;\n  var expression = node['body'][n];\n  if (expression) {\n    state.n_ = n + 1;\n    return new Interpreter.State(expression, state.scope);\n  }\n  stack.pop();\n  stack[stack.length - 1].value = this.value;\n};\n\nInterpreter.prototype['stepExpressionStatement'] = function(stack, state, node) {\n  if (!state.done_) {\n    state.done_ = true;\n    return new Interpreter.State(node['expression'], state.scope);\n  }\n  stack.pop();\n  // Save this value to interpreter.value for use as a return value if\n  // this code is inside an eval function.\n  this.value = state.value;\n};\n\nInterpreter.prototype['stepForInStatement'] = function(stack, state, node) {\n  // First, initialize a variable if exists.  Only do so once, ever.\n  if (!state.doneInit_) {\n    state.doneInit_ = true;\n    if (node['left']['declarations'] &&\n        node['left']['declarations'][0]['init']) {\n      if (state.scope.strict) {\n        this.throwException(this.SYNTAX_ERROR,\n            'for-in loop variable declaration may not have an initializer.');\n      }\n      // Variable initialization: for (var x = 4 in y)\n      return new Interpreter.State(node['left'], state.scope);\n    }\n  }\n  // Second, look up the object.  Only do so once, ever.\n  if (!state.doneObject_) {\n    state.doneObject_ = true;\n    if (!state.variable_) {\n      state.variable_ = state.value;\n    }\n    return new Interpreter.State(node['right'], state.scope);\n  }\n  if (!state.isLoop) {\n    // First iteration.\n    state.isLoop = true;\n    state.object_ = state.value;\n    state.visited_ = Object.create(null);\n  }\n  // Third, find the property name for this iteration.\n  if (state.name_ === undefined) {\n    gotPropName: while (true) {\n      if (state.object_ && state.object_.isObject) {\n        if (!state.props_) {\n          state.props_ = Object.getOwnPropertyNames(state.object_.properties);\n        }\n        while (true) {\n          var prop = state.props_.shift();\n          if (prop === undefined) {\n            break;  // Reached end of this object's properties.\n          }\n          if (!Object.prototype.hasOwnProperty.call(state.object_.properties,\n                prop)) {\n            continue;  // Property has been deleted in the loop.\n          }\n          if (state.visited_[prop]) {\n            continue;  // Already seen this property on a child.\n          }\n          state.visited_[prop] = true;\n          if (!Object.prototype.propertyIsEnumerable.call(\n                state.object_.properties, prop)) {\n            continue;  // Skip non-enumerable property.\n          }\n          state.name_ = prop;\n          break gotPropName;\n        }\n      } else if (state.object_ !== null && state.object_ !== undefined) {\n        // Primitive value (other than null or undefined).\n        if (!state.props_) {\n          state.props_ = Object.getOwnPropertyNames(state.object_);\n        }\n        while (true) {\n          var prop = state.props_.shift();\n          if (prop === undefined) {\n            break;  // Reached end of this value's properties.\n          }\n          state.visited_[prop] = true;\n          if (!Object.prototype.propertyIsEnumerable.call(\n                state.object_, prop)) {\n            continue;  // Skip non-enumerable property.\n          }\n          state.name_ = prop;\n          break gotPropName;\n        }\n      }\n      state.object_ = this.getPrototype(state.object_);\n      state.props_ = null;\n      if (state.object_ === null) {\n        // Done, exit loop.\n        stack.pop();\n        return;\n      }\n    }\n  }\n  // Fourth, find the variable\n  if (!state.doneVariable_) {\n    state.doneVariable_ = true;\n    var left = node['left'];\n    if (left['type'] === 'VariableDeclaration') {\n      // Inline variable declaration: for (var x in y)\n      state.variable_ =\n          [Interpreter.SCOPE_REFERENCE, left['declarations'][0]['id']['name']];\n    } else {\n      // Arbitrary left side: for (foo().bar in y)\n      state.variable_ = null;\n      var nextState = new Interpreter.State(left, state.scope);\n      nextState.components = true;\n      return nextState;\n    }\n  }\n  if (!state.variable_) {\n    state.variable_ = state.value;\n  }\n  // Fifth, set the variable.\n  if (!state.doneSetter_) {\n    state.doneSetter_ = true;\n    var value = state.name_;\n    var setter = this.setValue(state.variable_, value);\n    if (setter) {\n      return this.createSetter_(setter, state.variable_, value);\n    }\n  }\n  // Next step will be step three.\n  state.name_ = undefined;\n  // Reevaluate the variable since it could be a setter on the global object.\n  state.doneVariable_ = false;\n  state.doneSetter_ = false;\n  // Sixth and finally, execute the body if there was one.  this.\n  if (node['body']) {\n    return new Interpreter.State(node['body'], state.scope);\n  }\n};\n\nInterpreter.prototype['stepForStatement'] = function(stack, state, node) {\n  var mode = state.mode_ || 0;\n  if (mode === 0) {\n    state.mode_ = 1;\n    if (node['init']) {\n      return new Interpreter.State(node['init'], state.scope);\n    }\n  } else if (mode === 1) {\n    state.mode_ = 2;\n    if (node['test']) {\n      return new Interpreter.State(node['test'], state.scope);\n    }\n  } else if (mode === 2) {\n    state.mode_ = 3;\n    if (node['test'] && !state.value) {\n      // Done, exit loop.\n      stack.pop();\n    } else {  // Execute the body.\n      state.isLoop = true;\n      return new Interpreter.State(node['body'], state.scope);\n    }\n  } else if (mode === 3) {\n    state.mode_ = 1;\n    if (node['update']) {\n      return new Interpreter.State(node['update'], state.scope);\n    }\n  }\n};\n\nInterpreter.prototype['stepFunctionDeclaration'] =\n    function(stack, state, node) {\n  // This was found and handled when the scope was populated.\n  stack.pop();\n};\n\nInterpreter.prototype['stepFunctionExpression'] = function(stack, state, node) {\n  stack.pop();\n  stack[stack.length - 1].value = this.createFunction(node, state.scope);\n};\n\nInterpreter.prototype['stepIdentifier'] = function(stack, state, node) {\n  stack.pop();\n  if (state.components) {\n    stack[stack.length - 1].value = [Interpreter.SCOPE_REFERENCE, node['name']];\n    return;\n  }\n  var value = this.getValueFromScope(node['name']);\n  // An identifier could be a getter if it's a property on the global object.\n  if (value && typeof value === 'object' && value.isGetter) {\n    // Clear the getter flag and call the getter function.\n    value.isGetter = false;\n    var scope = state.scope;\n    while (!this.hasProperty(scope, node['name'])) {\n      scope = scope.parentScope;\n    }\n    var func = /** @type {!Interpreter.Object} */ (value);\n    return this.createGetter_(func, this.global);\n  }\n  stack[stack.length - 1].value = value;\n};\n\nInterpreter.prototype['stepIfStatement'] =\n    Interpreter.prototype['stepConditionalExpression'];\n\nInterpreter.prototype['stepLabeledStatement'] = function(stack, state, node) {\n  // No need to hit this node again on the way back up the stack.\n  stack.pop();\n  // Note that a statement might have multiple labels.\n  var labels = state.labels || [];\n  labels.push(node['label']['name']);\n  var nextState = new Interpreter.State(node['body'], state.scope);\n  nextState.labels = labels;\n  return nextState;\n};\n\nInterpreter.prototype['stepLiteral'] = function(stack, state, node) {\n  stack.pop();\n  var value = node['value'];\n  if (value instanceof RegExp) {\n    var pseudoRegexp = this.createObjectProto(this.REGEXP_PROTO);\n    this.populateRegExp(pseudoRegexp, value);\n    value = pseudoRegexp;\n  }\n  stack[stack.length - 1].value = value;\n};\n\nInterpreter.prototype['stepLogicalExpression'] = function(stack, state, node) {\n  if (node['operator'] !== '&&' && node['operator'] !== '||') {\n    throw SyntaxError('Unknown logical operator: ' + node['operator']);\n  }\n  if (!state.doneLeft_) {\n    state.doneLeft_ = true;\n    return new Interpreter.State(node['left'], state.scope);\n  }\n  if (!state.doneRight_) {\n    if ((node['operator'] === '&&' && !state.value) ||\n        (node['operator'] === '||' && state.value)) {\n      // Shortcut evaluation.\n      stack.pop();\n      stack[stack.length - 1].value = state.value;\n    } else {\n      state.doneRight_ = true;\n      return new Interpreter.State(node['right'], state.scope);\n    }\n  } else {\n    stack.pop();\n    stack[stack.length - 1].value = state.value;\n  }\n};\n\nInterpreter.prototype['stepMemberExpression'] = function(stack, state, node) {\n  if (!state.doneObject_) {\n    state.doneObject_ = true;\n    return new Interpreter.State(node['object'], state.scope);\n  }\n  var propName;\n  if (!node['computed']) {\n    state.object_ = state.value;\n    // obj.foo -- Just access 'foo' directly.\n    propName = node['property']['name'];\n  } else if (!state.doneProperty_) {\n    state.object_ = state.value;\n    // obj[foo] -- Compute value of 'foo'.\n    state.doneProperty_ = true;\n    return new Interpreter.State(node['property'], state.scope);\n  } else {\n    propName = state.value;\n  }\n  stack.pop();\n  if (state.components) {\n    stack[stack.length - 1].value = [state.object_, propName];\n  } else {\n    var value = this.getProperty(state.object_, propName);\n    if (value && typeof value === 'object' && value.isGetter) {\n      // Clear the getter flag and call the getter function.\n      value.isGetter = false;\n      var func = /** @type {!Interpreter.Object} */ (value);\n      return this.createGetter_(func, state.object_);\n    }\n    stack[stack.length - 1].value = value;\n  }\n};\n\nInterpreter.prototype['stepNewExpression'] =\n    Interpreter.prototype['stepCallExpression'];\n\nInterpreter.prototype['stepObjectExpression'] = function(stack, state, node) {\n  var n = state.n_ || 0;\n  var property = node['properties'][n];\n  if (!state.object_) {\n    // First execution.\n    state.object_ = this.createObjectProto(this.OBJECT_PROTO);\n    state.properties_ = Object.create(null);\n  } else {\n    // Determine property name.\n    var key = property['key'];\n    if (key['type'] === 'Identifier') {\n      var propName = key['name'];\n    } else if (key['type'] === 'Literal') {\n      var propName = key['value'];\n    } else {\n      throw SyntaxError('Unknown object structure: ' + key['type']);\n    }\n    // Set the property computed in the previous execution.\n    if (!state.properties_[propName]) {\n      // Create temp object to collect value, getter, and/or setter.\n      state.properties_[propName] = {};\n    }\n    state.properties_[propName][property['kind']] = state.value;\n    state.n_ = ++n;\n    property = node['properties'][n];\n  }\n  if (property) {\n    return new Interpreter.State(property['value'], state.scope);\n  }\n  for (var key in state.properties_) {\n    var kinds = state.properties_[key];\n    if ('get' in kinds || 'set' in kinds) {\n      // Set a property with a getter or setter.\n      var descriptor = {\n        configurable: true,\n        enumerable: true,\n        get: kinds['get'],\n        set: kinds['set']\n      };\n      this.setProperty(state.object_, key, null, descriptor);\n    } else {\n      // Set a normal property with a value.\n      this.setProperty(state.object_, key, kinds['init']);\n    }\n  }\n  stack.pop();\n  stack[stack.length - 1].value = state.object_;\n};\n\nInterpreter.prototype['stepProgram'] = function(stack, state, node) {\n  var expression = node['body'].shift();\n  if (expression) {\n    state.done = false;\n    return new Interpreter.State(expression, state.scope);\n  }\n  state.done = true;\n  // Don't pop the stateStack.\n  // Leave the root scope on the tree in case the program is appended to.\n};\n\nInterpreter.prototype['stepReturnStatement'] = function(stack, state, node) {\n  if (node['argument'] && !state.done_) {\n    state.done_ = true;\n    return new Interpreter.State(node['argument'], state.scope);\n  }\n  this.unwind(Interpreter.Completion.RETURN, state.value, undefined);\n};\n\nInterpreter.prototype['stepSequenceExpression'] = function(stack, state, node) {\n  var n = state.n_ || 0;\n  var expression = node['expressions'][n];\n  if (expression) {\n    state.n_ = n + 1;\n    return new Interpreter.State(expression, state.scope);\n  }\n  stack.pop();\n  stack[stack.length - 1].value = state.value;\n};\n\nInterpreter.prototype['stepSwitchStatement'] = function(stack, state, node) {\n  if (!state.test_) {\n    state.test_ = 1;\n    return new Interpreter.State(node['discriminant'], state.scope);\n  }\n  if (state.test_ === 1) {\n    state.test_ = 2;\n    // Preserve switch value between case tests.\n    state.switchValue_ = state.value;\n    state.defaultCase_ = -1;\n  }\n\n  while (true) {\n    var index = state.index_ || 0;\n    var switchCase = node['cases'][index];\n    if (!state.matched_ && switchCase && !switchCase['test']) {\n      // Test on the default case is null.\n      // Bypass (but store) the default case, and get back to it later.\n      state.defaultCase_ = index;\n      state.index_ = index + 1;\n      continue;\n    }\n    if (!switchCase && !state.matched_ && state.defaultCase_ !== -1) {\n      // Ran through all cases, no match.  Jump to the default.\n      state.matched_ = true;\n      state.index_ = state.defaultCase_;\n      continue;\n    }\n    if (switchCase) {\n      if (!state.matched_ && !state.tested_ && switchCase['test']) {\n        state.tested_ = true;\n        return new Interpreter.State(switchCase['test'], state.scope);\n      }\n      if (state.matched_ || state.value === state.switchValue_) {\n        state.matched_ = true;\n        var n = state.n_ || 0;\n        if (switchCase['consequent'][n]) {\n          state.isSwitch = true;\n          state.n_ = n + 1;\n          return new Interpreter.State(switchCase['consequent'][n],\n                                       state.scope);\n        }\n      }\n      // Move on to next case.\n      state.tested_ = false;\n      state.n_ = 0;\n      state.index_ = index + 1;\n    } else {\n      stack.pop();\n      return;\n    }\n  }\n};\n\nInterpreter.prototype['stepThisExpression'] = function(stack, state, node) {\n  stack.pop();\n  stack[stack.length - 1].value = this.getValueFromScope('this');\n};\n\nInterpreter.prototype['stepThrowStatement'] = function(stack, state, node) {\n  if (!state.done_) {\n    state.done_ = true;\n    return new Interpreter.State(node['argument'], state.scope);\n  } else {\n    this.throwException(state.value);\n  }\n};\n\nInterpreter.prototype['stepTryStatement'] = function(stack, state, node) {\n  if (!state.doneBlock_) {\n    state.doneBlock_ = true;\n    return new Interpreter.State(node['block'], state.scope);\n  }\n  if (state.cv && state.cv.type === Interpreter.Completion.THROW &&\n      !state.doneHandler_ && node['handler']) {\n    state.doneHandler_ = true;\n    var nextState = new Interpreter.State(node['handler'], state.scope);\n    nextState.throwValue = state.cv.value;\n    state.cv = undefined;  // This error has been handled, don't rethrow.\n    return nextState;\n  }\n  if (!state.doneFinalizer_ && node['finalizer']) {\n    state.doneFinalizer_ = true;\n    return new Interpreter.State(node['finalizer'], state.scope);\n  }\n  stack.pop();\n  if (state.cv) {\n    // There was no catch handler, or the catch/finally threw an error.\n    // Throw the error up to a higher try.\n    this.unwind(state.cv.type, state.cv.value, state.cv.label);\n  }\n};\n\nInterpreter.prototype['stepUnaryExpression'] = function(stack, state, node) {\n  if (!state.done_) {\n    state.done_ = true;\n    var nextState = new Interpreter.State(node['argument'], state.scope);\n    nextState.components = node['operator'] === 'delete';\n    return nextState;\n  }\n  stack.pop();\n  var value = state.value;\n  if (node['operator'] === '-') {\n    value = -value;\n  } else if (node['operator'] === '+') {\n    value = +value;\n  } else if (node['operator'] === '!') {\n    value = !value;\n  } else if (node['operator'] === '~') {\n    value = ~value;\n  } else if (node['operator'] === 'delete') {\n    var result = true;\n    // If value is not an array, then it is a primitive, or some other value.\n    // If so, skip the delete and return true.\n    if (Array.isArray(value)) {\n      var obj = value[0];\n      if (obj === Interpreter.SCOPE_REFERENCE) {\n        // 'delete foo;' is the same as 'delete window.foo'.\n        obj = state.scope;\n      }\n      var name = String(value[1]);\n      try {\n        delete obj.properties[name];\n      } catch (e) {\n        if (state.scope.strict) {\n          this.throwException(this.TYPE_ERROR, \"Cannot delete property '\" +\n                              name + \"' of '\" + obj + \"'\");\n        } else {\n          result = false;\n        }\n      }\n    }\n    value = result;\n  } else if (node['operator'] === 'typeof') {\n    value = (value && value.class === 'Function') ? 'function' : typeof value;\n  } else if (node['operator'] === 'void') {\n    value = undefined;\n  } else {\n    throw SyntaxError('Unknown unary operator: ' + node['operator']);\n  }\n  stack[stack.length - 1].value = value;\n};\n\nInterpreter.prototype['stepUpdateExpression'] = function(stack, state, node) {\n  if (!state.doneLeft_) {\n    state.doneLeft_ = true;\n    var nextState = new Interpreter.State(node['argument'], state.scope);\n    nextState.components = true;\n    return nextState;\n  }\n  if (!state.leftSide_) {\n    state.leftSide_ = state.value;\n  }\n  if (state.doneGetter_) {\n    state.leftValue_ = state.value;\n  }\n  if (!state.doneGetter_) {\n    var leftValue = this.getValue(state.leftSide_);\n    state.leftValue_ = leftValue;\n    if (leftValue && typeof leftValue === 'object' && leftValue.isGetter) {\n      // Clear the getter flag and call the getter function.\n      leftValue.isGetter = false;\n      state.doneGetter_ = true;\n      var func = /** @type {!Interpreter.Object} */ (leftValue);\n      return this.createGetter_(func, state.leftSide_);\n    }\n  }\n  if (state.doneSetter_) {\n    // Return if setter function.\n    // Setter method on property has completed.\n    // Ignore its return value, and use the original set value instead.\n    stack.pop();\n    stack[stack.length - 1].value = state.setterValue_;\n    return;\n  }\n  var leftValue = Number(state.leftValue_);\n  var changeValue;\n  if (node['operator'] === '++') {\n    changeValue = leftValue + 1;\n  } else if (node['operator'] === '--') {\n    changeValue = leftValue - 1;\n  } else {\n    throw SyntaxError('Unknown update expression: ' + node['operator']);\n  }\n  var returnValue = node['prefix'] ? changeValue : leftValue;\n  var setter = this.setValue(state.leftSide_, changeValue);\n  if (setter) {\n    state.doneSetter_ = true;\n    state.setterValue_ = returnValue;\n    return this.createSetter_(setter, state.leftSide_, changeValue);\n  }\n  // Return if no setter function.\n  stack.pop();\n  stack[stack.length - 1].value = returnValue;\n};\n\nInterpreter.prototype['stepVariableDeclaration'] = function(stack, state, node) {\n  var declarations = node['declarations'];\n  var n = state.n_ || 0;\n  var declarationNode = declarations[n];\n  if (state.init_ && declarationNode) {\n    // This setValue call never needs to deal with calling a setter function.\n    // Note that this is setting the init value, not defining the variable.\n    // Variable definition is done when scope is populated.\n    this.setValueToScope(declarationNode['id']['name'], state.value);\n    state.init_ = false;\n    declarationNode = declarations[++n];\n  }\n  while (declarationNode) {\n    // Skip any declarations that are not initialized.  They have already\n    // been defined as undefined in populateScope_.\n    if (declarationNode['init']) {\n      state.n_ = n;\n      state.init_ = true;\n      return new Interpreter.State(declarationNode['init'], state.scope);\n    }\n    declarationNode = declarations[++n];\n  }\n  stack.pop();\n};\n\nInterpreter.prototype['stepWithStatement'] = function(stack, state, node) {\n  if (!state.doneObject_) {\n    state.doneObject_ = true;\n    return new Interpreter.State(node['object'], state.scope);\n  } else if (!state.doneBody_) {\n    state.doneBody_ = true;\n    var scope = this.createSpecialScope(state.scope, state.value);\n    return new Interpreter.State(node['body'], scope);\n  } else {\n    stack.pop();\n  }\n};\n\nInterpreter.prototype['stepWhileStatement'] =\n    Interpreter.prototype['stepDoWhileStatement'];\n\n// Preserve top-level API functions from being pruned/renamed by JS compilers.\n// Add others as needed.\n// The global object ('window' in a browser, 'global' in node.js) is 'this'.\nthis['Interpreter'] = Interpreter;\nInterpreter.prototype['step'] = Interpreter.prototype.step;\nInterpreter.prototype['run'] = Interpreter.prototype.run;\nInterpreter.prototype['appendCode'] = Interpreter.prototype.appendCode;\nInterpreter.prototype['createObject'] = Interpreter.prototype.createObject;\nInterpreter.prototype['createObjectProto'] =\n    Interpreter.prototype.createObjectProto;\nInterpreter.prototype['createAsyncFunction'] =\n    Interpreter.prototype.createAsyncFunction;\nInterpreter.prototype['createNativeFunction'] =\n    Interpreter.prototype.createNativeFunction;\nInterpreter.prototype['getProperty'] = Interpreter.prototype.getProperty;\nInterpreter.prototype['setProperty'] = Interpreter.prototype.setProperty;\nInterpreter.prototype['nativeToPseudo'] = Interpreter.prototype.nativeToPseudo;\nInterpreter.prototype['pseudoToNative'] = Interpreter.prototype.pseudoToNative;\n// Obsolete.  Do not use.\nInterpreter.prototype['createPrimitive'] = function(x) {return x;};\n"]}